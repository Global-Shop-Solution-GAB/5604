Program.Sub.ScreenSU.Start
Gui.frmXStatus..Create
Gui.frmXStatus..Caption("Inventory Reconciliation")
Gui.frmXStatus..Size(18300,11205)
Gui.frmXStatus..MinX(15045)
Gui.frmXStatus..MinY(10095)
Gui.frmXStatus..Position(0,0)
Gui.frmXStatus..BackColor(-2147483633)
Gui.frmXStatus..MousePointer(0)
Gui.frmXStatus..Event(UnLoad,frmXStatus_UnLoad)
Gui.frmXStatus.picGSSLogo.Create(PictureBox)
Gui.frmXStatus.picGSSLogo.Size(4125,960)
Gui.frmXStatus.picGSSLogo.Position(13785,105)
Gui.frmXStatus.frameCutoff.Create(Frame)
Gui.frmXStatus.frameCutoff.Size(7740,1500)
Gui.frmXStatus.frameCutoff.Position(105,-15)
Gui.frmXStatus.dtpStart.Create(DatePicker)
Gui.frmXStatus.dtpStart.Size(1485,285)
Gui.frmXStatus.dtpStart.Position(90,360)
Gui.frmXStatus.dtpStart.Parent("frameCutoff")
Gui.frmXStatus.dtpStart.TabStop(True)
Gui.frmXStatus.dtpStart.TabIndex(1)
Gui.frmXStatus.dtpStart.Zorder(1)
Gui.frmXStatus.lbl1.Create(Label,"Start",True,510,255,0,90,165,True,0,"Arial",8,-2147483633,0)
Gui.frmXStatus.lbl1.Parent("frameCutoff")
Gui.frmXStatus.dtpEnd.Create(DatePicker)
Gui.frmXStatus.dtpEnd.Zorder(2)
Gui.frmXStatus.dtpEnd.Size(1485,285)
Gui.frmXStatus.dtpEnd.Position(1725,360)
Gui.frmXStatus.dtpEnd.Parent("frameCutoff")
Gui.frmXStatus.dtpEnd.TabStop(True)
Gui.frmXStatus.dtpEnd.TabIndex(2)
Gui.frmXStatus.lbl2.Create(Label,"End",True,570,255,0,1680,165,True,0,"Arial",8,-2147483633,0)
Gui.frmXStatus.lbl2.Parent("frameCutoff")
Gui.frmXStatus.lbl3.Create(Label,"GL Account ~ Product Lines",True,2220,255,0,135,825,True,0,"Arial",8,-2147483633,0)
Gui.frmXStatus.lbl3.Parent("frameCutoff")
Gui.frmXStatus.ddlGL.Create(DropDownList)
Gui.frmXStatus.ddlGL.Size(6450,330)
Gui.frmXStatus.ddlGL.Position(150,1035)
Gui.frmXStatus.ddlGL.Parent("frameCutoff")
Gui.frmXStatus.chkCompare.Create(CheckBox)
Gui.frmXStatus.chkCompare.Size(4230,285)
Gui.frmXStatus.chkCompare.Position(3330,375)
Gui.frmXStatus.chkCompare.Caption("Compare 2nd Cutoff with Crystal Report - Inventory >")
Gui.frmXStatus.chkCompare.Parent("frameCutoff")
Gui.frmXStatus.chkCompare.Event(Click,chkCompare_Click)
Gui.frmXStatus.lbl4.Create(Label,"Extended Status > By Product Line with Cutoff Date",True,3930,255,0,3555,690,True,0,"Arial",8,-2147483633,0)
Gui.frmXStatus.lbl4.Parent("frameCutoff")
Gui.frmXStatus.cmdShowFullPL.Create(Button)
Gui.frmXStatus.cmdShowFullPL.Size(960,375)
Gui.frmXStatus.cmdShowFullPL.Position(6675,1005)
Gui.frmXStatus.cmdShowFullPL.Parent("frameCutoff")
Gui.frmXStatus.cmdShowFullPL.Caption("Show PLs")
Gui.frmXStatus.cmdShowFullPL.FontSize(7)
Gui.frmXStatus.cmdShowFullPL.Event(Click,cmdShowFullPL_Click)
Gui.frmXStatus.lblStatus.Create(Label,"Loading Data....",False,2775,255,0,7965,135,True,0,"Arial",8,-2147483633,0)
Gui.frmXStatus.pbStatus.Create(ProgressBar)
Gui.frmXStatus.pbStatus.Size(2745,120)
Gui.frmXStatus.pbStatus.Position(7980,360)
Gui.frmXStatus.pbStatus.Visible(False)
Gui.frmXStatus.tabInvRec.Create(Tab)
Gui.frmXStatus.tabInvRec.Size(17985,9015)
Gui.frmXStatus.tabInvRec.Position(0,1530)
Gui.frmXStatus.tabInvRec.Tabs(2)
Gui.frmXStatus.tabInvRec.SetTab(0)
Gui.frmXStatus.tabInvRec.Caption("Inventory Reconciliation")
Gui.frmXStatus.tabInvRec.SetTab(1)
Gui.frmXStatus.tabInvRec.Caption("Non-Inventory")
Gui.frmXStatus.gsNonInv.Create(GsGridControl)
Gui.frmXStatus.gsNonInv.Size(17805,8445)
Gui.frmXStatus.gsNonInv.Position(0,90)
Gui.frmXStatus.gsNonInv.Parent("tabInvRec",1)
Gui.frmXStatus.GsStatus.Create(GsGridControl)
Gui.frmXStatus.GsStatus.Size(17715,8415)
Gui.frmXStatus.GsStatus.Position(60,105)
Gui.frmXStatus.GsStatus.Parent("tabInvRec",0)
Gui.frmXStatus.GsStatus.Event(RowCellClick,GsStatus_RowCellClick)
Gui.frmXStatus.lblIStart.Create(Label,"",False,630,210,0,7995,585,True,0,"Arial",7,-2147483633,0)
Gui.frmXStatus.lblIEnd.Create(Label,"",False,930,210,0,9600,585,True,1,"Arial",7,-2147483633,0)
Gui.frmXStatus.chkExtraInfo.Create(CheckBox)
Gui.frmXStatus.chkExtraInfo.Size(1485,360)
Gui.frmXStatus.chkExtraInfo.Position(4395,960)
Gui.frmXStatus.chkExtraInfo.Caption("Extra Part Info")
Gui.frmXStatus.chkExtraInfo.Visible(False)
Gui.frmXStatus.chDisplayUnchange.Create(CheckBox)
Gui.frmXStatus.chDisplayUnchange.Size(2145,360)
Gui.frmXStatus.chDisplayUnchange.Position(2130,930)
Gui.frmXStatus.chDisplayUnchange.Caption("Display Cost Unchange")
Gui.frmXStatus.chDisplayUnchange.Visible(False)
Gui.frmXStatus.chDisplayUnchange.Value(1)
Gui.frmXStatus.cmdRefresh.Create(Button)
Gui.frmXStatus.cmdRefresh.Size(930,315)
Gui.frmXStatus.cmdRefresh.Position(7950,1125)
Gui.frmXStatus.cmdRefresh.Caption("Refresh")
Gui.frmXStatus.cmdRefresh.Event(Click,cmdRefresh_Click)
Gui.frmXStatus.cmdSave.Create(Button)
Gui.frmXStatus.cmdSave.Size(2010,345)
Gui.frmXStatus.cmdSave.Position(8925,1110)
Gui.frmXStatus.cmdSave.Caption("Save 2nd CutOff Date")
Gui.frmXStatus.cmdSave.Event(Click,cmdSave_Click)
Gui.frmXStatus.cmdSave.Visible(False)
Gui.frmXStatus.cmdCompare.Create(Button)
Gui.frmXStatus.cmdCompare.Size(1290,330)
Gui.frmXStatus.cmdCompare.Position(11010,1110)
Gui.frmXStatus.cmdCompare.Caption("Compare 4631")
Gui.frmXStatus.cmdCompare.Event(Click,cmdCompare_Click)
Gui.frmXStatus.cmdCompare.Visible(False)
Gui.frmXStatus.ddlDateFormat.Create(DropDownList)
Gui.frmXStatus.ddlDateFormat.Size(2220,330)
Gui.frmXStatus.ddlDateFormat.Position(15675,1110)
Gui.frmXStatus.ddlDateFormat.Anchor(9)
Gui.frmXStatus.lbl5.Create(Label,"Date Format",True,1050,255,0,14565,1215,True,0,"Arial",8,-2147483633,0)
Gui.frmXStatus.lbl5.Anchor(9)
Gui.FrmPrtHist..Create
Gui.FrmPrtHist..Size(19905,10770)
Gui.FrmPrtHist..MinX(0)
Gui.FrmPrtHist..MinY(0)
Gui.FrmPrtHist..Position(0,0)
Gui.FrmPrtHist..BackColor(-2147483633)
Gui.FrmPrtHist..MousePointer(0)
Gui.FrmPrtHist..Caption("Part History")
Gui.FrmPrtHist..Event(UnLoad,FrmPrtHist_UnLoad)
Gui.FrmPrtHist..Sizeable(False)
Gui.FrmPrtHist.picGSSLogo.Create(PictureBox)
Gui.FrmPrtHist.picGSSLogo.Size(4125,960)
Gui.FrmPrtHist.picGSSLogo.Position(11805,105)
Gui.FrmPrtHist.frameDate.Create(Frame)
Gui.FrmPrtHist.frameDate.Size(2730,1080)
Gui.FrmPrtHist.frameDate.Position(105,180)
Gui.FrmPrtHist.frameDate.Caption("Part History")
Gui.FrmPrtHist.lblFrom.Create(Label,"From: ",True,525,255,0,90,300,True,0,"Arial",8,-2147483633,0)
Gui.FrmPrtHist.lblFrom.Parent("frameDate")
Gui.FrmPrtHist.dtpFrom.Create(DatePicker)
Gui.FrmPrtHist.dtpFrom.Size(1935,285)
Gui.FrmPrtHist.dtpFrom.Position(630,225)
Gui.FrmPrtHist.dtpFrom.Parent("frameDate")
Gui.FrmPrtHist.lblTo.Create(Label,"To: ",True,315,255,0,285,675,True,0,"Arial",8,-2147483633,0)
Gui.FrmPrtHist.lblTo.Parent("frameDate")
Gui.FrmPrtHist.dtpTo.Create(DatePicker)
Gui.FrmPrtHist.dtpTo.Size(1935,285)
Gui.FrmPrtHist.dtpTo.Position(630,615)
Gui.FrmPrtHist.dtpTo.Parent("frameDate")
Gui.FrmPrtHist.GsGCPrtHist.Create(GsGridControl)
Gui.FrmPrtHist.GsGCPrtHist.Size(19560,4200)
Gui.FrmPrtHist.GsGCPrtHist.Position(75,1350)
Gui.FrmPrtHist.GSGCGLHist.Create(GsGridControl)
Gui.FrmPrtHist.GSGCGLHist.Size(19590,4230)
Gui.FrmPrtHist.GSGCGLHist.Position(75,5895)
Gui.FrmPrtHist.lblPartHistory.Create(Label,"Part",True,855,255,0,7380,75,True,0,"Arial",8,-2147483633,0)
Gui.FrmPrtHist.lblGLHistory.Create(Label,"GL Account History",True,1935,255,0,60,5655,True,0,"Arial",8,-2147483633,0)
Gui.FrmPrtHist.frameDateGL.Create(Frame)
Gui.FrmPrtHist.frameDateGL.Size(2250,1080)
Gui.FrmPrtHist.frameDateGL.Position(4050,180)
Gui.FrmPrtHist.frameDateGL.Caption("GL History")
Gui.FrmPrtHist.dtpGLStart.Create(DatePicker)
Gui.FrmPrtHist.dtpGLStart.Size(1935,285)
Gui.FrmPrtHist.dtpGLStart.Position(150,255)
Gui.FrmPrtHist.dtpGLStart.Parent("frameDateGL")
Gui.FrmPrtHist.dtpGLEnd.Create(DatePicker)
Gui.FrmPrtHist.dtpGLEnd.Size(1935,285)
Gui.FrmPrtHist.dtpGLEnd.Position(150,660)
Gui.FrmPrtHist.dtpGLEnd.Parent("frameDateGL")
Gui.FrmPrtHist.cmdLoadPartHist.Create(Button)
Gui.FrmPrtHist.cmdLoadPartHist.Size(855,375)
Gui.FrmPrtHist.cmdLoadPartHist.Position(2910,270)
Gui.FrmPrtHist.cmdLoadPartHist.Caption("Load")
Gui.FrmPrtHist.cmdLoadPartHist.Event(Click,cmdLoadPartHist_Click)
Gui.FrmPrtHist.cmdLoadGLHist.Create(Button)
Gui.FrmPrtHist.cmdLoadGLHist.Size(855,375)
Gui.FrmPrtHist.cmdLoadGLHist.Position(6420,270)
Gui.FrmPrtHist.cmdLoadGLHist.Caption("Load")
Gui.FrmPrtHist.cmdLoadGLHist.Event(Click,cmdLoadGLHist_Click)
Gui.FrmPrtHist.txtPart.Create(TextBox,"",True,1935,300,0,7380,285,True,0,"Arial",8,-2147483643,1)
Gui.FrmPrtHist.txtLoc.Create(TextBox,"",True,360,300,0,7395,900,True,0,"Arial",8,-2147483643,1)
Gui.FrmPrtHist.lblPartHistory2.Create(Label,"Loc",True,465,255,0,7350,690,True,0,"Arial",8,-2147483633,0)
Gui.Compare4631..Create
Gui.Compare4631..Caption("Compare 5604 with 4601")
Gui.Compare4631..Size(15915,10695)
Gui.Compare4631..MinX(0)
Gui.Compare4631..MinY(0)
Gui.Compare4631..Position(0,0)
Gui.Compare4631..BackColor(-2147483633)
Gui.Compare4631..MousePointer(0)
Gui.Compare4631..Event(UnLoad,Compare4631_UnLoad)
Gui.Compare4631.gsCompare.Create(GsGridControl)
Gui.Compare4631.gsCompare.Size(15435,9795)
Gui.Compare4631.gsCompare.Position(165,165)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
v.Global.sPL.Declare
v.Global.bSecondLoad.Declare
f.Intrinsic.Control.CallSub("Check_And_Create_Custom_Folder")
v.Global.bGVMain.Declare
v.Global.bGvNonInv.Declare
v.Global.bGvPartHistory.Declare
v.Global.bgvGLHist.Declare
v.Global.bRezise.Declare
v.Global.sTimeZoneName.Declare
v.Global.sGridDateFormat.Declare
Program.External.Include.Library("GCG_5604_Tables.lib",False)
Program.Sub.Preflight.End

Program.Sub.Main.Start
'BN, Sept 6, 2019
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.sGSSLogo.Declare
	V.Local.sIcon.Declare
	v.Local.sHold.Declare
	
	F.ODBC.Connection!con.OpenCompanyConnection(3600)	
	
	f.Intrinsic.Control.CallSub("Check_Tables_con")
	
	'Set Logo
	F.Intrinsic.String.Build("{0}\gss2.ico",V.Caller.ArtDir,v.Local.sIcon)
	F.Intrinsic.String.Build("{0}\GAB_GSS_Logo_Green_Dash.png",V.Caller.ArtDir,V.Local.sGssLogo)
	Gui.frmXStatus.picGSSLogo.Picture(V.Local.sGSSLogo)
	Gui.FrmPrtHist.picGSSLogo.Picture(v.Local.sGSSLogo)
	Gui.frmXStatus..Icon(V.Local.sIcon)
	'Populate GL Acct
	f.Intrinsic.UI.InvokeWaitDialog("Getting GL Accounts and Product Lines...")
	F.Intrinsic.Control.CallSub("Populate_GL_Dropdown")	
	f.Intrinsic.UI.CloseWaitDialog
	
	'Set Anchor and Tab 	'0 - None			'1 - Top			'2 - Bottom			'4 - Left			'8 - Right	
	Gui.frmXStatus.picGssLogo.Anchor(1)	
	Gui.frmXStatus.gsStatus.Anchor(15)
	Gui.frmXStatus.gsNonInv.Anchor(15)
	Gui.frmXStatus.tabInvRec.SetTab(0)	
	gui.FrmPrtHist.GsGCPrtHist.Anchor(13)
	gui.FrmPrtHist.GSGCGLHist.Anchor(15)
	gui.frmXStatus.tabInvRec.Anchor(15)
	
	gui.frmXStatus.ddlDateFormat.AddItem("MM/DD/YYYY")
	gui.frmXStatus.ddlDateFormat.AddItem("DD/MM/YYYY")
	f.Data.DataTable.CreateFromString("dtTimeZone","UTC-04*!*UTC-05*!*UTC-06*!*UTC-07*!*UTC-08*!*UTC-09*!*UTC-10*!*UTC-11","Name","String","","*!*",True)
	f.Intrinsic.Date.TimeZoneName(v.Global.sTimeZoneName)
	f.Intrinsic.String.Mid(v.Global.sTimeZoneName,2,6,v.Local.sHold)
	f.Intrinsic.String.Build("Name like '*{0}*'",v.Local.sHold,v.Local.sHold)
	f.Data.DataTable.Select("dtTimeZone",v.Local.sHold,v.Local.sHold)
	f.Intrinsic.Control.If(v.Local.sHold,<>,"***NORETURN***")	
		gui.frmXStatus.ddlDateFormat.ListIndex(0)
	f.Intrinsic.Control.Else
		gui.frmXStatus.ddlDateFormat.ListIndex(1)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.CallSub("SetContextMenu")
	
	Gui.frmXStatus..Show	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.Unload.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare

	F.Intrinsic.Control.If(V.ODBC.con.State,=,1)
		F.ODBC.Connection!con.close
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Subroutine called from:{6}{1}Error Occurred: {3}{1}Description: {4}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,v.Ambient.SubroutineCalledFrom,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End	
F.Intrinsic.Control.EndTry
Program.Sub.Unload.End

Program.Sub.Check_And_Create_Custom_Folder.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.bExist.Declare
	v.Local.sFile.Declare
	v.Local.sDir.Declare
	
	f.Intrinsic.String.Build("{0}\Custom",v.Caller.GlobalDir,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("{0}\Custom\5604",v.Caller.GlobalDir,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("{0}\Custom\5604\{1}",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.String.Build("{0}\Custom\5604\{1}\Files",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
	f.Intrinsic.File.DirExists(v.Local.sDir,v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDir)
	f.Intrinsic.Control.EndIf	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: 5604 {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}GAB Version: {5}}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	f.Intrinsic.Control.CallSub("Write_GAB_Error_Log","sError",v.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry	
Program.Sub.Check_And_Create_Custom_Folder.End

Program.Sub.Populate_GL_Dropdown.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sSQL.Declare
	v.Local.sAccount.Declare
	v.Local.iCnt.Declare
	v.Local.sRet.Declare
	v.Local.sItem.Declare
	v.Local.sFile.Declare
	v.Local.bExist.Declare
	v.Local.sContent.Declare
	v.Local.sFilter.Declare
	v.Local.sPLs.Declare		
	
	f.Data.DataTable.CreateFromSQL("GLs","con","Select Debit_Account as Account, Product_Line from  V_Inv_GL_Accts where Code_Transaction in ('J52','P16','P18','A10') UNION Select Credit_Account as Account, Product_Line from  V_Inv_GL_Accts where Code_Transaction in ('A50','J55','O35') order by Account")
	f.Data.DataView.Create("GLs","dvGLs")
	f.Data.DataView.ToDataTableDistinct("GLs","dvGLs","distinctGLPL","Account*!*Product_Line",True)
	
	f.Data.DataView.ToDatatableDistinct("GLs","dvGLs","distinctGL","Account",True)
	f.Data.DataView.Create("distinctGLPL","dvDistinctGLPL")
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.distinctGL.RowCount--,1)
		f.Intrinsic.String.Build("Account = '{0}'",v.DataTable.distinctGL(v.Local.iCnt).Account!FieldValString,v.Local.sFilter)
		f.Data.DataView.SetFilter("distinctGLPL","dvDistinctGLPL",v.Local.sFilter)
		f.Data.DataView.SetSort("distinctGLPL","dvDistinctGLPL","Product_Line")
		f.Data.DataView.ToString("distinctGLPL","dvDistinctGLPL","Product_Line","",",",v.Local.sPLs)
		f.Intrinsic.String.Build("{0} ~ {1}",v.DataTable.distinctGL(v.Local.iCnt).Account!FieldValString,v.Local.sPLs,v.Local.sItem)
		gui.frmXStatus.ddlGL.AddItem(v.Local.sItem)		
	f.Intrinsic.Control.Next(v.Local.iCnt)
	F.Data.DataTable.Close("GLs")
	F.Data.DataTable.Close("distinctGLPL")
	F.Data.DataTable.Close("distinctGL")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Populate_GL_Dropdown.End

Program.Sub.cmdRefresh_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	
	f.Intrinsic.Control.If(v.Screen.frmXStatus!tabInvRec.Tab,=,0)
		f.Intrinsic.Control.CallSub("cmdRefreshInvRec")
	f.Intrinsic.Control.ElseIf(v.Screen.frmXStatus!tabInvRec.Tab,=,1)
		f.Intrinsic.Control.CallSub("cmdRefreshNonInv")
	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

Program.Sub.cmdRefreshInvRec.Start
'Load/Reload table when Refresh is clicked.
F.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	v.Local.dStart.Declare
	v.Local.dEnd.Declare
	v.Local.sCaption.Declare
	v.Local.sHold.Declare

	'Validate GL
	f.Intrinsic.Control.If(v.Screen.frmXStatus!ddlGL.Text,=,"")
		f.Intrinsic.UI.Msgbox("Please select a GL Account")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf

	'Validate Date Start and Date End
	v.Local.dStart.Set(v.Screen.frmXStatus!dtpStart.Value)
	v.Local.dEnd.Set(v.Screen.frmXStatus!dtpEnd.Value)
	f.Intrinsic.Control.If(v.Local.dEnd,<,v.Local.dStart)
		f.Intrinsic.UI.Msgbox("Date End must be equal or after Date Start")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	Gui.frmXStatus.cmdRefresh.Enabled(False)
	Gui.frmXStatus.lblStatus.Visible(True)	
	Gui.frmXStatus.lblStatus.Caption("Getting Product Line...")
	
	f.Intrinsic.String.Split(v.Screen.frmXStatus!ddlGL.Text,"~",v.Local.sHold)
	v.Global.sPL.Set(v.Local.sHold(1).Trim)
	f.Intrinsic.String.Replace(v.Global.sPL,",","','",v.Global.sPL)
	'Debug
'	v.Global.sPL.Set("FG")

	Gui.frmXStatus.lblStatus.Caption("Processing....")
	gui.frmXStatus.cmdRefresh.Enabled(False)
	gui.frmXStatus.dtpStart.Enabled(False)
	gui.frmXStatus.dtpEnd.Enabled(False)
	gui.frmXStatus.ddlGL.Enabled(False)
	F.Intrinsic.Control.CallSub("Get_Data")
	
	gui.frmXStatus.gsStatus.AddGridviewFromDatatable("GVMain","dthasHist2")	
	f.Intrinsic.Control.CallSub("LoadGvXStatus")
	v.Global.sGridDateFormat.Set(v.Screen.frmXStatus!ddlDateFormat.Text)
	v.Global.bGVMain.Set(True)
	
	Gui.frmXStatus.lblStatus.Caption("")
	gui.frmXStatus.cmdRefresh.Enabled(True)
	gui.frmXStatus.dtpStart.Enabled(True)
	gui.frmXStatus.dtpEnd.Enabled(True)
	gui.frmXStatus.ddlGL.Enabled(True)		
	f.Intrinsic.Control.ExitSub
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdRefreshInvRec.End

Program.Sub.Add_Using_Dictionaries.Start
'Parameters: SourceTable,KeyColumn,ColumnList(ColumnName~DataType~DefaultValue),TargetTable
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sColumns.Declare
	v.Local.sDataType.Declare
	v.Local.iCnt.Declare
	v.Local.sHold.Declare
	v.Local.sCol.Declare
	v.Local.sDefaultReturn.Declare
	
	f.Intrinsic.String.Split(v.Args.ColumnList,",",v.Local.sColumns)
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sColumns.UBound,1)
		f.Intrinsic.String.Split(v.Local.sColumns(v.Local.iCnt),"~",v.Local.sHold)
		v.Local.sCol.Set(v.Local.sHold(0).Trim)
		v.Local.sDataType.Set(v.Local.sHold(1).Trim)
		v.Local.sDefaultReturn.set(v.Local.sHold(2).Trim)
		f.Data.Dictionary.CreateFromDataTable(v.Local.sCol,v.Args.SourceTable,v.Args.KeyColumn,v.Local.sCol)
		f.Data.Dictionary.SetDefaultReturn(v.Local.sCol,v.Local.sDefaultReturn)
		f.Data.DataTable.FillFromDictionary(v.Args.TargetTable,v.Local.sCol,v.Args.KeyColumn,v.Local.sCol)
		f.Data.Dictionary.Close(v.Local.sCol)	
	f.Intrinsic.Control.Next(v.Local.iCnt)	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}GAB Version: {5}}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Write_GAB_Error_Log","sError",v.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Add_Using_Dictionaries.End

Program.Sub.Get_Data.Start
F.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.dDate.Declare
	v.Local.sSQL.Declare	
	v.Local.sDate.Declare
	v.Local.iCnt.Declare
	v.Local.sToday.Declare
	v.Local.sPart.Declare
	v.Local.sLocation.Declare
	v.Local.sToday.Set(v.Ambient.Date.FormatYYYYMMDD)
	v.Local.dStart.Declare
	v.Local.dEnd.Declare
	v.Local.shold.Declare
	v.Local.sDateActionSQL.Declare
	v.Local.sDate_History.Declare
	v.Local.iYearHistory.Declare
	v.Local.sRet.Declare
	v.Local.iNextDate.Declare	
	v.Local.iDate_Hist.Declare
	v.Local.sGL.Declare	
	
	v.local.fOld_Onhand.Declare 
	v.local.fOld_Inv_Cost.Declare 
	v.local.fOld_Matl.Declare 
	v.local.fOld_Labr.Declare 
	v.local.fOld_Ovhd.Declare 
	v.local.fOld_Outs.Declare 
	v.local.fOld_Frgt.Declare 
	v.Local.fOld_Oth.Declare 
	v.Local.iBeg_Date_Action.Declare
	v.Local.sBeg_Hist_Time.Declare	
	
	'Get Today Data for the product line selected	
	Gui.frmXStatus.lblStatus.Caption("Delete Today data from custom table...")
	f.Intrinsic.String.Build("Delete from GCG_5604_Hist where Date_Hist = {0}",v.Local.sToday,v.Local.sSQL)
	f.ODBC.Connection!con.Execute(v.Local.sSQL)
	
	'Get today data
	Gui.frmXStatus.lblStatus.Caption("Getting the last values of today transactions...")
	f.Intrinsic.String.Build("Select i1.Part + '-' + i1.Location + '-' + i1.Date_History as Ref,i1.Product_Line,i1.Part,i1.Location,i1.Date_Acct_Yr,i1.Date_Acct_Mo,i1.Date_History,i1.Date_Action as Date_ActionRaw,i1.Inv_Hist_Time,Convert(if(i1.Date_Action = '' or SubString(i1.Date_Action,1,2) > '12','19000101',If( SubString(i1.Date_Action,5,2) < '80','20' + Substring(i1.Date_Action,5,2) + SubString(i1.Date_Action,1,4),'19' + Substring(i1.Date_Action,5,2) + SubString(i1.Date_Action,1,4))),SQL_Integer) as Date_Action,if(i1.Date_Action = '' or SubString(i1.Date_Action,1,2) > '12','19000101' + i1.Inv_Hist_Time,If( SubString(i1.Date_Action,5,2) < '80','20' + Substring(i1.Date_Action,5,2) + SubString(i1.Date_Action,1,4) + i1.Inv_Hist_Time,'19' + Substring(i1.Date_Action,5,2) + SubString(i1.Date_Action,1,4) +  i1.Inv_Hist_Time))  as HistOrderNum1,Convert(0,SQL_Integer) as NextDate,i1.New_Onhand,i1.New_Inv_Cost,i1.New_Matl,i1.New_Labr,i1.New_Ovhd,i1.New_Outs,i1.New_Frgt,i1.New_Oth From Inventory_Hist i1  inner join (Select i2.Part,i2.Location,i2.Date_History,max(if(  i2.Date_Action = '' or SubString(i2.Date_Action,1,2) > '12','19000101' + i2.Inv_Hist_Time ,If( SubString(i2.Date_Action,5,2) < '80','20' + Substring(i2.Date_Action,5,2) + SubString(i2.Date_Action,1,4) + i2.Inv_Hist_Time,'19' + Substring(i2.Date_Action,5,2) + SubString(i2.Date_Action,1,4)+  i2.Inv_Hist_Time)))  as HistOrderNum3 from Inventory_Hist i2 where 	 i2.Date_History = '{0}' and i2.Product_Line in ('{1}')	Group by     i2.Part,i2.Location,i2.Date_History) i3  on i1.Part = i3.Part and i1.Location = i3.Location and i1.Date_History = i3.Date_history  where i1.Date_History = '{0}' and i1.Product_Line in ('{1}')	and HistOrderNum1 = i3.HistOrderNum3 Order By   i1.Date_History,i1.Location,i1.Part;",v.Local.sToday.Right6,v.Global.sPL,v.Local.sSQL)	
	f.Data.DataTable.CreateFromSQL("Today","con",v.Local.sSQL,True)
	f.Data.DataTable.AddExpressionColumn("Today","Date_Hist","Long","20000000 + Convert([Date_History],System.Int32)")
	f.Data.DataTable.AddColumn("Today","DateRefine","Long",v.Local.sToday)
	f.Intrinsic.Control.If(v.DataTable.Today.RowCount,>,0)
		gui.frmXStatus.pbStatus.Visible(True)
		gui.frmXStatus.pbStatus.Max(v.DataTable.Today.RowCount)
		gui.frmXStatus.lblIStart.Visible(True)
		gui.frmXStatus.lblIEnd.Visible(True)
		gui.frmXStatus.lblIEnd.Caption(v.DataTable.Today.RowCount)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.Today.RowCount--,1)
		gui.frmXStatus.pbStatus.Value(v.Local.iCnt)
		gui.frmXStatus.lblIStart.Caption(v.Local.iCnt)
		v.Local.sPart.Set(v.DataTable.Today(v.Local.iCnt).Part!FieldValString)
		v.Local.sLocation.Set(v.DataTable.Today(v.Local.iCnt).Location!FieldValString)
		
		'Update nextdate for history records having date_Hist < sToday
		'f.Intrinsic.String.Build("Update GCG_5604_Hist set NextDate = {0} where Part = '{1}' and Location = '{2}' and Date_Hist = (Select Top 1 Date_Hist from GCG_5604_Hist where Part = '{1}' and Location = '{2}' and Date_Hist < {0} Order by Date_Hist desc)",v.DataTable.Today(v.Local.iCnt).Date_Hist!FieldValString,v.Local.sPart.PSQLFriendly,v.DataTable.Today(v.Local.iCnt).Location!FieldValString,v.Local.sSQL)
		'Change to Max instead of Order Desc and select top 1 (for bug with Citadel Casing on PSQL 12 does not run with the sql above)
		f.Intrinsic.String.Build("Update GCG_5604_Hist set NextDate = {0} where Part = '{1}' and Location = '{2}' and Date_Hist = (Select IsNull(Max(Date_Hist),0) from GCG_5604_Hist where Part = '{1}' and Location = '{2}' and Date_Hist < {0})",v.DataTable.Today(v.Local.iCnt).Date_Hist!FieldValString,v.Local.sPart.PSQLFriendly,v.DataTable.Today(v.Local.iCnt).Location!FieldValString,v.Local.sSQL)
		f.ODBC.Connection!con.Execute(v.Local.sSQL)		
	f.Intrinsic.Control.Next(v.Local.iCnt)
	gui.frmXStatus.pbStatus.Visible(False)
	gui.frmXStatus.lblIStart.Visible(False)
	gui.frmXStatus.lblIEnd.Visible(False)
	
	'Populate old values of the begining of the day record
	f.Intrinsic.String.Build("Select Part + '-' + Location + '-' + Date_History as Ref,   Convert(if(Date_Action = '' or SubString(Date_Action,1,2) > '12','19000101',If( SubString(Date_Action,5,2) < '80','20' + Substring(Date_Action,5,2) + SubString(Date_Action,1,4),'19' + Substring(Date_Action,5,2) + SubString(Date_Action,1,4))),SQL_Integer) as BegDate_Action,Inv_Hist_Time as Beg_Hist_Time,if(Date_Action = '' or SubString(Date_Action,1,2) > '12','19000101' + Inv_Hist_Time,If( SubString(Date_Action,5,2) < '80','20' + Substring(Date_Action,5,2) + SubString(Date_Action,1,4) + Inv_Hist_Time,'19' + Substring(Date_Action,5,2) + SubString(Date_Action,1,4)+  Inv_Hist_Time))  as HistOrderNum1 ,Old_Onhand,Old_Inv_Cost,Old_Matl,Old_Labr,Old_Ovhd,Old_Outs,Old_Frgt,Old_Oth	From Inventory_Hist   where Date_History = '{0}' and Product_Line in ('{1}')  Order By Part,Location,Date_history,HistOrderNum1 asc;",v.Local.sToday.Right6,v.Global.sPL,v.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("OldValue", "con",v.Local.sSQL, True)
	
	f.Intrinsic.Control.CallSub("Add_Dictionaries","SourceTable","OldValue","KeyColumn","Ref","ColumnList","BegDate_Action~Long~0,Beg_Hist_Time~String~,Old_Onhand~Float~0,Old_Inv_Cost~Float~0,Old_Matl~Float~0,Old_Labr~Float~0,Old_Ovhd~Float~0,Old_Outs~Float~0,Old_Frgt~Float~0,Old_Oth~Float~0","TargetTable","Today")
	f.Data.DataTable.Close("OldValue")	
		
	Gui.frmXStatus.lblStatus.Caption("Saving Today Data...")
	f.Data.DataTable.SaveToDB("Today","con","GCG_5604_Hist","",128,"Product_Line@!@Product_Line*!*Part@!@Part*!*Location@!@Location*!*Date_Acct_Yr@!@Date_Acct_Yr*!*Date_Acct_Mo@!@Date_Acct_Mo*!*Date_History@!@Date_History*!*Date_Hist@!@Date_Hist*!*Inv_Hist_Time@!@Inv_Hist_Time*!*NextDate@!@NextDate*!*New_Onhand@!@New_Onhand*!*New_Inv_Cost@!@New_Inv_Cost*!*New_Matl@!@New_Matl*!*New_Labr@!@New_Labr*!*New_Ovhd@!@New_Ovhd*!*New_Outs@!@New_Outs*!*New_Frgt@!@New_Frgt*!*New_Oth@!@New_Oth*!*DateRefine@!@DateRefine*!*Date_Action@!@Date_Action*!*Old_Onhand@!@Old_Onhand*!*Old_Inv_Cost@!@Old_Inv_Cost*!*Old_Matl@!@Old_Matl*!*Old_Labr@!@Old_Labr*!*Old_Ovhd@!@Old_Ovhd*!*Old_Outs@!@Old_Outs*!*Old_Frgt@!@Old_Frgt*!*Old_Oth@!@Old_Oth*!*BegDate_Action@!@BegDate_Action*!*Beg_Hist_Time@!@Beg_Hist_Time")		
		
	f.Data.DataTable.Close("Today")

	'This is for back date case. So user puts in a transaction today and he wants to insert this transaction somewhere in the past. The Date_Action = Today. Date_History is the date he wants to insert in the past
	'Refine Today Date_Action <> Date_History
	f.Intrinsic.String.Mid(v.Local.sToday,3,2,v.Local.sHold)	
	f.Intrinsic.String.Build("{0}{1}",v.Local.sToday.right4,v.Local.shold,v.Local.sDateActionSQL)
	'Select data for a day based on Date_action and Date_Action <> Date_History
	f.Intrinsic.String.Build("Select Part,Location,Date_History From Inventory_Hist where Date_Action = '{0}' and Date_History <> '{1}' ",v.Local.sDateActionSQL,v.Local.sToday.Right6,v.Local.sSQL)
	f.Data.DataTable.CreateFromSQL("DateProcess","con",v.Local.sSQL,True)
	f.Data.DataView.Create("DateProcess","dvDateProcess")
	f.Data.DataView.ToDataTableDistinct("DateProcess","dvDateProcess","PartLocDateHist","Part*!*Location*!*Date_History",True)
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.PartLocDateHist.RowCount--,1)
		v.Local.sPart.Set(v.DataTable.PartLocDateHist(v.Local.iCnt).Part!FieldValString)
		v.Local.sLocation.Set(v.DataTable.PartLocDateHist(v.Local.iCnt).Location!FieldValString)
		v.Local.sDate_History.Set(v.DataTable.PartLocDateHist(v.Local.iCnt).Date_History!FieldValString)
		v.Local.iYearHistory.Set(v.Local.sDate_History.left2)
		'Get the last transaction of the Part, Location at the Date History
		F.Intrinsic.String.Build("Select Top 1 Product_Line,Part,Location,Date_Acct_Yr,Date_Acct_Mo,Date_History,Convert(0,SQL_Integer) as Date_Hist,Inv_Hist_Time,Convert(if(Date_Action = '' or SubString(Date_Action,1,2) > '12','19000101',If( SubString(Date_Action,5,2) < '80','20' + Substring(Date_Action,5,2) + SubString(Date_Action,1,4),'19' + Substring(Date_Action,5,2) + SubString(Date_Action,1,4))),SQL_Integer) as Date_Action1,Convert(0,SQL_Integer) as NextDate,New_Onhand,New_Inv_Cost,New_Matl,New_Labr,New_Ovhd,New_Outs,New_Frgt,New_Oth From Inventory_Hist where Date_History = '{0}' and Part = '{1}' and Location = '{2}' order by Date_Action1 Desc",v.DataTable.PartLocDateHist(v.Local.iCnt).Date_History!FieldValString,v.Local.sPart.PSQLFriendly,v.Local.sLocation,v.Local.sSQL)
		f.Data.DataTable.CreateFromSQL("aDateHistory","con",v.Local.sSQL,True)
		f.Intrinsic.Control.If(v.DataTable.aDateHistory.RowCount,>,0)
			'Get the next transaction of this Part,Location from that Date History
			f.Intrinsic.Control.If(v.Local.iYearHistory,>=,80)
				'iYear Prefix = 19000000 (from 1980 to 1999)
				f.Intrinsic.Math.Add("19000000",v.Local.sDate_History,v.Local.iDate_Hist)
				'Find next in range (1980 - 1900)
				f.Intrinsic.String.Build("Select top 1 Date_History from inventory_hist where part = '{0}' and Location = '{1}' and date_History > '{2}' and Date_Acct_Yr <> '' and Date_Acct_Mo <> '' order by date_history asc;",v.Local.sPart.PSQLFriendly,v.Local.sLocation,v.Local.sDate_History,v.Local.sSQL)					
				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
				f.Intrinsic.Control.If(v.Local.sRet,<>,"")
					f.Intrinsic.Math.Add(19000000,v.local.sRet,v.Local.iNextDate)
					f.Data.DataTable.SetValue("aDateHistory",0,"NextDate",v.local.iNextDate)
				'If there is not in range 1980 - 1900, find next in range >= 2000
				f.Intrinsic.Control.Else
					f.Intrinsic.String.Build("Select top 1 Date_History from inventory_hist where part = '{0}' and Location = '{1}' and date_History >= '000101' and substring(date_history,1,2) < '80' and Date_Acct_Yr <> '' and Date_Acct_Mo <> '' order by date_history asc",v.Local.sPart.PSQLFriendly,v.Local.sLocation,v.Local.sSQL)					
					f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
					f.Intrinsic.Control.If(v.Local.sRet,<>,"")
						f.Intrinsic.Math.Add(20000000,v.local.sRet,v.Local.iNextDate)	
						f.Data.DataTable.SetValue("aDateHistory",0,"NextDate",v.local.iNextDate)
					f.Intrinsic.Control.EndIf							
				f.Intrinsic.Control.EndIf	
			f.Intrinsic.Control.Else
				'iYear Prefix = 2000	
				f.Intrinsic.Math.Add("20000000",v.Local.sDate_History,v.Local.iDate_Hist)
				'Find next
				f.Intrinsic.String.Build("Select top 1 Date_History from inventory_hist where part = '{0}' and Location = '{1}' and date_History > '{2}' and substring(date_history,1,2) < '80' and Date_Acct_Yr <> '' and Date_Acct_Mo <> '' order by date_history asc",v.Local.sPart.PSQLFriendly,v.Local.sLocation,v.Local.sDate_History,v.Local.sSQL)			
				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
				f.Intrinsic.Control.If(v.Local.sRet,<>,"")
					f.Intrinsic.Math.Add(20000000,v.local.sRet,v.Local.iNextDate)
					f.Data.DataTable.SetValue("aDateHistory",0,"NextDate",v.local.iNextDate)
				f.Intrinsic.Control.EndIf			
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.SetValue("aDateHistory",0,"Date_Hist",v.local.iDate_Hist)
		

			'Get Old Values of begining of the day record
			f.Intrinsic.String.Build("Select Top 1 Old_Onhand,Old_Inv_Cost,Old_Matl,Old_Labr,Old_Ovhd,Old_Outs,Old_Frgt,Old_Oth,Inv_Hist_Time,Convert(if(Date_Action = '' or SubString(Date_Action,1,2) > '12','19000101',If( SubString(Date_Action,5,2) < '80','20' + Substring(Date_Action,5,2) + SubString(Date_Action,1,4),'19' + Substring(Date_Action,5,2) + SubString(Date_Action,1,4))),SQL_Integer) as Date_Action1 From Inventory_Hist where Date_History = '{0}' and Part = '{1}' and Location = '{2}' order by Date_Action1 Asc,Inv_Hist_Time Asc",v.Local.sDate_History,v.Local.sPart.PSQLFriendly,v.Local.sLocation,v.Local.sSQL)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
			f.Intrinsic.Control.If(v.Local.sRet,<>,"")
				f.Intrinsic.String.split(v.Local.sRet,"*!*",v.Local.sRet)
				v.local.fOld_Onhand.Set(v.local.sRet(0)) 
				v.local.fOld_Inv_Cost.Set(v.local.sRet(1)) 
				v.local.fOld_Matl.Set(v.local.sRet(2)) 
				v.local.fOld_Labr.Set(v.local.sRet(3)) 
				v.local.fOld_Ovhd.Set(v.local.sRet(4)) 
				v.local.fOld_Outs.Set(v.local.sRet(5)) 
				v.local.fOld_Frgt.Set(v.local.sRet(6)) 
				v.Local.fOld_Oth.Set(v.local.sRet(7)) 	
				v.Local.sBeg_Hist_Time.Set(v.Local.sRet(8))
				v.Local.iBeg_Date_Action.Set(v.Local.sRet(9))
			f.Intrinsic.Control.Else
				v.local.fOld_Onhand.Set(0) 
				v.local.fOld_Inv_Cost.Set(0) 
				v.local.fOld_Matl.Set(0) 
				v.local.fOld_Labr.Set(0) 
				v.local.fOld_Ovhd.Set(0) 
				v.local.fOld_Outs.Set(0) 
				v.local.fOld_Frgt.Set(0) 
				v.Local.fOld_Oth.Set(0) 	
				v.Local.sBeg_Hist_Time.Set("")
				v.Local.iBeg_Date_Action.Set(0)			
			f.Intrinsic.Control.EndIf
			
			'Find the transaction of that Part,Location,Date_History in the GCG_5604_Hist
			'If there is, update it, If there  is not, insert into GCG_5604_Hist			
			f.Intrinsic.String.Build("Select * from GCG_5604_Hist where Date_Hist = '{0}' and Part = '{1}' and Location = '{2}'",v.Local.iDate_Hist,v.Local.sPart.PSQLFriendly,v.Local.sLocation,v.Local.sSQL)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
			f.Intrinsic.Control.If(v.Local.sRet,=,"")
				f.Intrinsic.String.Build("Insert into GCG_5604_Hist (Product_Line,Part,Location,Date_Acct_Yr,Date_Acct_Mo,Date_History,Date_Hist,Inv_Hist_Time,NextDate,New_Onhand,New_Inv_Cost,New_Matl,New_Labr,New_Ovhd,New_Outs,New_Frgt,New_Oth,DateRefine,Date_Action,Old_Onhand,Old_Inv_Cost,Old_Matl,Old_Labr,Old_Ovhd,Old_Outs,Old_Frgt,Old_Oth,Beg_Hist_Time,BegDate_Action) values  ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}','{17}','{18}','{19}','{20}','{21}','{22}','{23}','{24}','{25}','{26}','{27}','{28}')",v.DataTable.aDateHistory(0).Product_Line!FieldValString,v.Local.sPart.PSQLFriendly,v.DataTable.aDateHistory(0).Location!FieldValString,v.DataTable.aDateHistory(0).Date_Acct_Yr!FieldValString,v.DataTable.aDateHistory(0).Date_Acct_Mo!FieldValString,v.DataTable.aDateHistory(0).Date_History!FieldValString,v.DataTable.aDateHistory(0).Date_Hist!FieldValString,v.DataTable.aDateHistory(0).Inv_Hist_Time!FieldValString,v.DataTable.aDateHistory(0).NextDate!FieldValString,v.DataTable.aDateHistory(0).New_Onhand!FieldValString,v.DataTable.aDateHistory(0).New_Inv_Cost!FieldValString,v.DataTable.aDateHistory(0).New_Matl!FieldValString,v.DataTable.aDateHistory(0).New_Labr!FieldValString,v.DataTable.aDateHistory(0).New_Ovhd!FieldValString,v.DataTable.aDateHistory(0).New_Outs!FieldValString,v.DataTable.aDateHistory(0).New_Frgt!FieldValString,v.DataTable.aDateHistory(0).New_Oth!FieldValString,v.Local.sToday,v.DataTable.aDateHistory(0).Date_Action1!FieldValString,v.Local.fOld_Onhand,v.local.fOld_Inv_Cost,v.local.fOld_Matl,v.local.fOld_Labr,v.local.fOld_Ovhd,v.local.fOld_Outs,v.local.fOld_Frgt,v.local.fOld_Oth,v.local.sBeg_Hist_Time,v.Local.iBeg_Date_Action,v.Local.sSQL)
			f.Intrinsic.Control.Else
				f.Intrinsic.String.Build("Update GCG_5604_Hist set Product_Line = '{3}',Date_Acct_Yr = '{4}',Date_Acct_Mo = '{5}',Date_History = '{6}',Inv_Hist_Time = '{7}',NextDate = '{8}',New_Onhand = '{9}',New_Inv_Cost = '{10}',New_Matl = '{11}',New_Labr = '{12}',New_Ovhd = '{13}',New_Outs = '{14}',New_Frgt = '{15}',New_Oth = '{16}',DateRefine = '{17}',Date_Action = '{18}',Old_Onhand = '{19}',Old_Inv_Cost = '{20}',Old_Matl = '{21}',Old_Labr = '{22}',Old_Ovhd = '{23}',Old_Outs = '{24}',Old_Frgt = '{25}',Old_Oth = '{26}',Beg_Hist_Time = '{27}',BegDate_Action = '{28}'  where Date_Hist = '{0}' and Part = '{1}' and Location = '{2}'",v.Local.iDate_Hist,v.Local.sPart.PSQLFriendly,v.Local.sLocation,v.DataTable.aDateHistory(0).Product_Line!FieldValString,v.DataTable.aDateHistory(0).Date_Acct_Yr!FieldValString,v.DataTable.aDateHistory(0).Date_Acct_Mo!FieldValString,v.DataTable.aDateHistory(0).Date_History!FieldValString,v.DataTable.aDateHistory(0).Inv_Hist_Time!FieldValString,v.DataTable.aDateHistory(0).NextDate!FieldValString,v.DataTable.aDateHistory(0).New_Onhand!FieldValString,v.DataTable.aDateHistory(0).New_Inv_Cost!FieldValString,v.DataTable.aDateHistory(0).New_Matl!FieldValString,v.DataTable.aDateHistory(0).New_Labr!FieldValString,v.DataTable.aDateHistory(0).New_Ovhd!FieldValString,v.DataTable.aDateHistory(0).New_Outs!FieldValString,v.DataTable.aDateHistory(0).New_Frgt!FieldValString,v.DataTable.aDateHistory(0).New_Oth!FieldValString,v.Local.sToday,v.DataTable.aDateHistory(0).Date_Action1!FieldValString,v.Local.fOld_Onhand,v.local.fOld_Inv_Cost,v.local.fOld_Matl,v.local.fOld_Labr,v.local.fOld_Ovhd,v.local.fOld_Outs,v.local.fOld_Frgt,v.local.fOld_Oth,v.local.sBeg_Hist_Time,v.Local.iBeg_Date_Action,v.Local.sSQL)
			f.Intrinsic.Control.EndIf
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
			
			'Update nextdate for history records having date_Hist < Last Date Refine
			f.Intrinsic.String.Build("Update GCG_5604_Hist set NextDate = {0} where Part = '{1}' and Location = '{2}' and Date_Hist = (Select IsNull(Max(Date_Hist),0) from GCG_5604_Hist where Part = '{1}' and Location = '{2}' and Date_Hist < {0})",v.Local.iDate_Hist,v.Local.sPart.PSQLFriendly,v.Local.sLocation,v.Local.sSQL)
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
			
		f.Intrinsic.Control.EndIf
		f.Data.DataTable.Close("aDateHistory")
	f.Intrinsic.Control.Next(v.Local.iCnt)
	f.Data.Datatable.Close("PartLocDateHist")
	f.Data.DataTable.Close("DateProcess")
	
	'Get AllParts basic structure from inventory_mstr
	Gui.frmXStatus.lblStatus.Caption("Getting Inventory Master structure...")
	
	'chkExtraInfo is obsolete, so it will never enter this
	f.Intrinsic.Control.If(v.Screen.frmXStatus!chkExtraInfo.Value,=,1)
		f.Intrinsic.String.build("Select A.Part,A.Location,A.Description,A.Product_Line,Convert(0,SQL_Integer) As Date_Hist1,Cast(0 As Numeric(15,6)) As New_OnHand1,Cast(0 As Numeric(16,6)) As New_Inv_Cost1,Cast(0 As Numeric(16,6)) As New_Matl1,Cast(0 As  Numeric(16,6)) As New_Labr1,Cast(0 As Numeric(16,6)) As New_Ovhd1,Cast(0 As Numeric(16,6)) As New_Outs1,Cast(0 As Numeric(16,6)) As New_Frgt1,Cast(0 As Numeric(16,6)) As New_Oth1,Convert(0,SQL_Integer) As Date_Hist2,Cast(0 As Numeric(15,6)) As New_OnHand2,Cast(0 As Numeric(16,6)) As New_Inv_Cost2,Cast(0 As Numeric(16,6)) As New_Matl2,Cast(0 As Numeric(16,6)) As New_Labr2,Cast(0 As Numeric(16,6)) As New_Ovhd2,Cast(0 As Numeric(16,6)) As New_Outs2,Cast(0 As Numeric(16,6)) As New_Frgt2,Cast(0 As Numeric(16,6)) As New_Oth2 ,Convert(0,SQL_Bit) as HasHist1,Convert(0,SQL_Bit) as HasHist2 ,Convert(0,SQL_Bit) as HasOldValue1,Convert(0,SQL_Bit) as HasOldValue2,A.Part+A.Location As PartLoc,             Convert(i3.Part_Create_Date,SQL_Integer) as Part_Create_Date,substring(Part_Create_Date,5,2)  + '/' + right(Part_Create_Date,2) + '/' + Left(Part_Create_Date,4) as Part_Create_DateString               ,RTrim(RTrim(B.Description_2)+' '+RTrim(B.Description_3)) as AltDesc,RTrim(D.Text) As ExtraDesc,Case B.Code_Source When 'P' Then 'PS' When 'J' Then 'PJ' When '' Then 'PJ' When 'M' Then 'MS' When 'F' Then 'MJ' Else B.Code_Source End As Code_Source,A.UM_Inventory,A.Time_Material_Lead,A.Code_Sort,A.Bin As Bin,A.Code_ABC,B.LBS,Cast(Case When Flag_Lot = '' Or Flag_Lot = 'N' Then 0 Else 1 End As Bit) As Flag_Lot,Cast(Case When Flag_Drop = '' Or Flag_Drop = 'N' Then 0 Else 1 End As Bit) As Flag_Drop,Cast(Case When Flag_Serialize = '' Or Flag_Serialize = 'N' Then 0 Else 1 End As Bit) As Flag_Serialize,Cast(Case When Obsolete_Flag = '' Or Obsolete_Flag = 'N' Then 0 Else 1 End As Bit) As Obsolete_Flag,Cast(Case When Flag_Inactive = '' Or Flag_Inactive = 'N' Then 0 Else 1 End As Bit) As Flag_Inactive,RTrim(B.Name_Vendor) As Name_Vendor,RTrim(B.Text_Info1) As Text_Info1,RTrim(B.Text_Info2) As Text_Info2 ,A.Amt_Price As Amt_Price  From V_Inventory_Mstr A Left Join V_Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location  Left Join V_Inv_Extra_Text D On A.Part = D.Part Left Join Inventory_Mst3 i3 On A.Part = i3.Part and A.Location = i3.Location Where A.Product_Line in ('{0}')",v.Global.sPL,v.Local.sSQL)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("Select A.Part,A.Location,A.Description ,A.Product_Line,Convert(0,SQL_Integer) As Date_Hist1,Cast(0 As Numeric(15,6)) As New_OnHand1,Cast(0 As Numeric(16,6)) As New_Inv_Cost1,Cast(0 As Numeric(16,6)) As New_Matl1,Cast(0 As Numeric(16,6)) As New_Labr1,Cast(0 As Numeric(16,6)) As New_Ovhd1,Cast(0 As Numeric(16,6)) As New_Outs1,Cast(0 As Numeric(16,6)) As New_Frgt1,Cast(0 As Numeric(16,6)) As New_Oth1,Convert(0,SQL_Integer) As Date_Hist2,Cast(0 As Numeric(15,6)) As New_OnHand2,Cast(0 As Numeric(16,6)) As New_Inv_Cost2,Cast(0 As Numeric(16,6)) As New_Matl2,Cast(0 As Numeric(16,6)) As New_Labr2,Cast(0 As Numeric(16,6)) As New_Ovhd2,Cast(0 As Numeric(16,6)) As New_Outs2 ,Cast(0 As Numeric(16,6)) As New_Frgt2,Cast(0 As Numeric(16,6)) As New_Oth2,Convert(0,SQL_Bit) as HasHist1 ,Convert(0,SQL_Bit) as HasHist2,Convert(0,SQL_Bit) as HasOldValue1,Convert(0,SQL_Bit) as HasOldValue2,A.Part+A.Location As PartLoc, Convert(i3.Part_Create_Date,SQL_Integer) as Part_Create_Date,substring(Part_Create_Date,5,2)  + '/' + right(Part_Create_Date,2) + '/' + Left(Part_Create_Date,4) as Part_Create_DateString    From V_Inventory_Mstr A      Left Join Inventory_Mst3 i3 On A.Part = i3.Part and A.Location = i3.Location Where A.Product_Line in ('{0}')",v.Global.sPL,v.Local.sSQL)
	f.Intrinsic.Control.EndIf	

	f.Intrinsic.Control.If(v.DataTable.AllParts.Exists)
		f.Data.DataTable.Close("AllParts")		
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.DataTable.dthasHist2.Exists)		
		f.Data.DataTable.Close("dthasHist2")
		gui.frmXStatus.gsStatus.ClearRows("gvXStatus")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("AllParts","con",v.Local.sSQL,True)
	'f.Data.DataTable.Clone("AllParts","dtFinal",True)
	
	'1/Compare First Date and Secondate with Part_Created_Date
	v.Local.dStart.Set(v.Screen.frmXStatus!dtpStart.Value)
	v.Local.dEnd.Set(v.Screen.frmXStatus!dtpEnd.Value)
	f.Data.DataTable.AddColumn("AllParts","FirstCutOff","Long",v.Local.dStart.FormatYYYYMMDD)
	f.Data.DataTable.AddColumn("AllParts","SecondCutOff","Long",v.Local.dEnd.FormatYYYYMMDD)
	f.Data.DataTable.AddExpressionColumn("AllParts","CreatedAfterFirstCutOff","boolean","IIF([Part_Create_Date] <= ([FirstCutOff] -1),0,1)")
	f.Data.DataTable.AddExpressionColumn("AllParts","CreatedAfterSecondCutOff","boolean","IIF([Part_Create_Date] <= [SecondCutOff],0,1)")
	
	'2/Deviate to Part has Created Date before cutoff date and Part has Created Date after cutoff date
	f.Data.DataView.Create("AllParts","dvAllParts",22,"CreatedAfterFirstCutOff = 1","")
	f.Data.DataView.ToDataTable("AllParts","dvAllParts","dtCreateAfterFirstCutOff1",True)
		
	'3/Get history data for Start Date (has history before and after the cutoff date)
	Gui.frmXStatus.lblStatus.Caption("Getting Start Cutoff data...")
	V.Local.dDate.Set(V.Screen.frmXStatus!dtpStart.Value)
	f.Intrinsic.String.Build("Select i1.Part + i1.Location as PartLoc,i1.Part,i1.Location, i1.Date_History,i1.Date_Hist as Date_Hist1,i1.New_OnHand as New_Onhand1,i1.New_Inv_Cost as New_Inv_Cost1,i1.New_Matl as New_Matl1,i1.New_Labr as New_Labr1,i1.New_Ovhd as New_Ovhd1,i1.New_Outs as New_Outs1,i1.New_Frgt as New_Frgt1,i1.New_Oth as New_Oth1,Convert(1,SQL_Bit) as HasHist from GCG_5604_Hist i1 inner join (Select i2.Part,i2.Location,Max(Date_Hist) as Date_Hist from GCG_5604_Hist i2 where i2.Product_Line in ('{0}') and i2.Date_Hist < {1} and i2.NextDate >= {1} and i2.Date_Hist <> 0  Group By Part,Location) i3 on i1.Part = i3.Part and i1.Location = i3.Location and i1.Date_Hist = i3.Date_Hist where i1.Product_Line in ('{0}') and  i1.Date_Hist < {1} and i1.NextDate >= {1}  and i1.Date_Hist <> 0;",v.Global.sPL,v.Local.dDate.FormatYYYYMMDD,v.Local.sSQL)
	f.Data.DataTable.CreateFromSQL("PartHist","con",v.Local.sSQL,True)
	
	'4.* Process Parts that has history
	f.Data.Dictionary.CreateFromDatatable("HasHistDict","PartHist","PartLoc","HasHist")
	f.Data.Dictionary.SetDefaultReturn("HasHistDict",False)
	f.Data.DataTable.FillFromDictionary("AllParts","HasHistDict","PartLoc","HasHist1")	
	f.Data.Dictionary.Close("HasHistDict")
	
	'Create dtHasHist1
	f.Data.DataView.SetFilter("AllParts","dvAllParts","HasHist1 = 1 and CreatedAfterFirstCutOff = 0")
	f.Data.DataView.ToDataTable("AllParts","dvAllParts","dtHasHist1",True)
	
	'Create dtNonHist1
	f.Data.DataView.SetFilter("AllParts","dvAllParts","HasHist1 = 0 and CreatedAfterFirstCutOff = 0")
	f.Data.DataView.ToDataTable("AllParts","dvAllParts","dtNonHist1",True)
	
	f.Data.DataTable.Close("AllParts")	
	
	f.Intrinsic.Control.CallSub("Add_Using_Dictionaries","SourceTable","PartHist","KeyColumn","PartLoc","ColumnList","Date_Hist1~Long~0,New_Onhand1~Float~0,New_Inv_Cost1~Float~0,New_Matl1~Float~0,New_Labr1~Float~0,New_Ovhd1~Float~0,New_Outs1~Float~0,New_Frgt1~Float~0,New_Oth1~Float~0","TargetTable","dthasHist1")
	f.Data.DataTable.Close("PartHist")
	
	f.Data.DataTable.Merge("dtCreateAfterFirstCutOff1","dthasHist1",True,3)
	f.Data.DataTable.Close("dtCreateAfterFirstCutOff1")
	
	'5/Deviate dtNonHist1 to HasOldValue1 or not
	f.Intrinsic.String.Build("Select Part + Location as PartLoc,Convert(1,SQL_Bit) as hasOldValue1,Date_Hist as Date_Hist1,Old_Onhand as New_OnHand1,Old_Inv_Cost as New_Inv_Cost1,Old_Matl as New_Matl1,Old_Labr as New_Labr1,Old_Ovhd as New_Ovhd1,Old_Outs as New_Outs1,Old_Frgt as New_Frgt1,Old_Oth as New_Oth1 from GCG_5604_Hist where Date_Hist > {0} and Product_Line in ('{1}') Order by Part,Location,Date_Hist asc",v.Local.dStart.FormatYYYYMMDD,v.Global.sPL,v.Local.sSQL)
	f.Data.DataTable.CreateFromSQL("PopOldValues","con",v.Local.sSQL,True)
	
	f.Data.Dictionary.CreateFromDataTable("dictHasOldValue1","PopOldValues","PartLoc","hasOldValue1")
	f.Data.Dictionary.SetDefaultReturn("dictHasOldValue1",False)
	f.Data.Datatable.FillFromDictionary("dtNonHist1","dictHasOldValue1","PartLoc","HasOldValue1")
	f.Data.Dictionary.Close("dictHasOldValue1")
	
	f.Data.DataView.Create("dtNonHist1","dvNonHist1",22,"hasOldValue1 = 1","")
	f.Data.DataView.ToDataTable("dtNonHist1","dvNonHist1","dtNonHist1a",True)
	f.Data.DataView.SetFilter("dtNonHist1","dvNonHist1","hasOldValue1 = 0")
	f.Data.DataView.ToDataTable("dtNonHist1","dvNonHist1","dtNonHist1b",True)
	
	f.Data.DataTable.Close("dtNonHist1")
	
	'6/Process dtNonHist1a - Populate Old Values for date 1
	f.Intrinsic.Control.CallSub("Add_Using_Dictionaries","SourceTable","PopOldValues","KeyColumn","PartLoc","ColumnList","Date_Hist1~Long~0,New_Onhand1~Float~0,New_Inv_Cost1~Float~0,New_Matl1~Float~0,New_Labr1~Float~0,New_Ovhd1~Float~0,New_Outs1~Float~0,New_Frgt1~Float~0,New_Oth1~Float~0","TargetTable","dtNonHist1a")
	f.Data.DataTable.Close("PopOldValues")	
	
	f.Data.DataTable.Merge("dtNonHist1a","dthasHist1",True,3)
	f.Data.DataTable.Close("dtNonHist1a")
	
	'7/Create dictionary from Inventory_Cost to populate dtNonHist1
	f.Intrinsic.String.Build("Select i1.Part + i1.Locn as PartLoc,i2.qty_Onhand,i1.Cost,i1.Matl,i1.Labor,i1.Ovhd,i1.outs,i1.freight,i1.oth from Inventory_Cost i1 left join inventory_mstr i2 on i1.part = i2.part and i1.locn = i2.Location where i2.Product_Line in ('{0}')",v.Global.sPL,v.Local.sSQL)
	f.Data.DataTable.CreateFromSQL("dtICost","con",v.Local.sSQL,True)
	f.Data.Dictionary.createFromDataTable("Onhand","dtICost","PartLoc","Qty_Onhand")
	f.Data.Dictionary.createFromDataTable("Cost","dtICost","PartLoc","Cost")
	f.Data.Dictionary.createFromDataTable("Matl","dtICost","PartLoc","Matl")
	f.Data.Dictionary.createFromDataTable("Labor","dtICost","PartLoc","Labor")
	f.Data.Dictionary.createFromDataTable("Ovhd","dtICost","PartLoc","Ovhd")
	f.Data.Dictionary.createFromDataTable("Outs","dtICost","PartLoc","outs")
	f.Data.Dictionary.createFromDataTable("Freight","dtICost","PartLoc","freight")
	f.Data.Dictionary.createFromDataTable("Oth","dtICost","PartLoc","oth")
	
	f.Data.Dictionary.SetDefaultReturn("Cost",0)
	f.Data.Dictionary.SetDefaultReturn("Matl",0)
	f.Data.Dictionary.SetDefaultReturn("Labor",0)
	f.Data.Dictionary.SetDefaultReturn("Ovhd",0)
	f.Data.Dictionary.SetDefaultReturn("Outs",0)
	f.Data.Dictionary.SetDefaultReturn("Freight",0)
	f.Data.Dictionary.SetDefaultReturn("Oth",0)	
	f.Data.Dictionary.SetDefaultReturn("Onhand",0)
	f.Data.DataTable.Close("dtICost")
	
	f.Data.DataTable.FillFromDictionary("dtNonHist1b","Onhand","PartLoc","New_Onhand1")
	f.Data.DataTable.FillFromDictionary("dtNonHist1b","Cost","PartLoc","New_Inv_Cost1")
	f.Data.DataTable.FillFromDictionary("dtNonHist1b","Matl","PartLoc","New_Matl1")
	f.Data.DataTable.FillFromDictionary("dtNonHist1b","Labor","PartLoc","New_Labr1")
	f.Data.DataTable.FillFromDictionary("dtNonHist1b","Ovhd","PartLoc","New_Ovhd1")
	f.Data.DataTable.FillFromDictionary("dtNonHist1b","Outs","PartLoc","New_Outs1")
	f.Data.DataTable.FillFromDictionary("dtNonHist1b","Freight","PartLoc","New_Frgt1")
	f.Data.DataTable.FillFromDictionary("dtNonHist1b","Oth","PartLoc","New_Oth1")
	
	f.Data.DataTable.Merge("dtNonHist1b","dthasHist1",True,3)
	f.Data.DataTable.Close("dtNonHist1b")	
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''DATE 2 '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''	
	'8/Deviate to Part has Created Date before cutoff date and Part has Created Date after cutoff date
	f.Data.DataView.Create("dthasHist1","dvdthasHist1",22,"CreatedAfterSecondCutOff = 1","")
	f.Data.DataView.ToDataTable("dthasHist1","dvdthasHist1","dtCreateAfterSecondCutOff",True)
	
	'Date 2 (End Date)
	Gui.frmXStatus.lblStatus.Caption("Getting End Cutoff data...")
	V.Local.dDate.Set(V.Screen.frmXStatus!dtpEnd.Value)
	f.Intrinsic.String.Build("Select i1.Part + i1.Location as PartLoc,i1.Part,i1.Location, i1.Date_History,i1.Date_Hist as Date_Hist2,i1.New_OnHand as New_OnHand2,i1.New_Inv_Cost as New_Inv_Cost2,i1.New_Matl as New_Matl2,i1.New_Labr as New_Labr2,i1.New_Ovhd as New_Ovhd2,i1.New_Outs as New_Outs2,i1.New_Frgt as New_Frgt2,i1.New_Oth as New_Oth2,Convert(1,SQL_Bit) as HasHist from GCG_5604_Hist i1 inner join (Select i2.Part,i2.Location,Max(Date_Hist) as Date_Hist from GCG_5604_Hist i2 where i2.Product_Line in ('{0}') and i2.Date_Hist <= {1} and i2.NextDate > {1} and i2.Date_Hist <> 0  Group By Part,Location) i3 on i1.Part = i3.Part and i1.Location = i3.Location and i1.Date_Hist = i3.Date_Hist where i1.Product_Line in ('{0}') and  i1.Date_Hist <= {1} and i1.NextDate > {1} and i1.Date_Hist <> 0;",v.Global.sPL,v.Local.dDate.FormatYYYYMMDD,v.Local.sSQL)
	f.Data.DataTable.CreateFromSQL("PartHist","con",v.Local.sSQL,True)	
	
	'8.* Process Parts that has history
	f.Data.Dictionary.CreateFromDatatable("HasHistDict","PartHist","PartLoc","HasHist")
	f.Data.Dictionary.SetDefaultReturn("HasHistDict",False)
	f.Data.DataTable.FillFromDictionary("dthasHist1","HasHistDict","PartLoc","HasHist2")	
	f.Data.Dictionary.Close("HasHistDict")
	
	'Create dtHasHist2
	f.Data.DataView.SetFilter("dthasHist1","dvdthasHist1","HasHist2 = 1 and CreatedAfterSecondCutOff = 0")
	f.Data.DataView.ToDataTable("dthasHist1","dvdthasHist1","dtHasHist2",True)
	
	'Create dtNonHist2
	f.Data.DataView.SetFilter("dthasHist1","dvdthasHist1","HasHist2 = 0 and CreatedAfterSecondCutOff = 0")
	f.Data.DataView.ToDataTable("dthasHist1","dvdthasHist1","dtNonHist2",True)	
	
	f.Data.DataTable.Close("dthasHist1")
	
	f.Intrinsic.Control.CallSub("Add_Using_Dictionaries","SourceTable","PartHist","KeyColumn","PartLoc","ColumnList","Date_Hist2~Long~0,New_Onhand2~Float~0,New_Inv_Cost2~Float~0,New_Matl2~Float~0,New_Labr2~Float~0,New_Ovhd2~Float~0,New_Outs2~Float~0,New_Frgt2~Float~0,New_Oth2~Float~0","TargetTable","dthasHist2")
	f.Data.DataTable.Close("PartHist")

	f.Data.DataTable.Merge("dtCreateAfterSecondCutOff","dthasHist2",True,3)
	f.Data.DataTable.Close("dtCreateAfterSecondCutOff")
	
	'9/Deviate dtNonHist2 to HasOldValue1 or not
	f.Intrinsic.String.Build("Select Part + Location as PartLoc,Convert(1,SQL_Bit) as hasOldValue2,Date_Hist as Date_Hist2,Old_Onhand as New_OnHand2,Old_Inv_Cost as New_Inv_Cost2,Old_Matl as New_Matl2,Old_Labr as New_Labr2,Old_Ovhd as New_Ovhd2,Old_Outs as New_Outs2,Old_Frgt as New_Frgt2,Old_Oth as New_Oth2 from GCG_5604_Hist where Date_Hist > {0} and Product_Line in ('{1}') Order by Part,Location,Date_Hist asc",v.Local.dEnd.FormatYYYYMMDD,v.Global.sPL,v.Local.sSQL)
	f.Data.DataTable.CreateFromSQL("PopOldValues","con",v.Local.sSQL,True)

	f.Data.Dictionary.CreateFromDataTable("dictHasOldValue2","PopOldValues","PartLoc","hasOldValue2")
	f.Data.Dictionary.SetDefaultReturn("dictHasOldValue2",False)
	f.Data.Datatable.FillFromDictionary("dtNonHist2","dictHasOldValue2","PartLoc","HasOldValue2")
	f.Data.Dictionary.Close("dictHasOldValue2")
	
	f.Data.DataView.Create("dtNonHist2","dvNonHist2",22,"hasOldValue2 = 1","")
	f.Data.DataView.ToDataTable("dtNonHist2","dvNonHist2","dtNonHist2a",True)
	f.Data.DataView.SetFilter("dtNonHist2","dvNonHist2","hasOldValue2 = 0")
	f.Data.DataView.ToDataTable("dtNonHist2","dvNonHist2","dtNonHist2b",True)
	
	f.Data.DataTable.Close("dtNonHist2")
	
	'10/Process dtNonHist2a - Populate Old Values for date 2
	f.Intrinsic.Control.CallSub("Add_Using_Dictionaries","SourceTable","PopOldValues","KeyColumn","PartLoc","ColumnList","Date_Hist2~Long~0,New_Onhand2~Float~0,New_Inv_Cost2~Float~0,New_Matl2~Float~0,New_Labr2~Float~0,New_Ovhd2~Float~0,New_Outs2~Float~0,New_Frgt2~Float~0,New_Oth2~Float~0","TargetTable","dtNonHist2a")
	f.Data.DataTable.Close("PopOldValues")	
	
	f.Data.DataTable.Merge("dtNonHist2a","dthasHist2",True,3)
	f.Data.DataTable.Close("dtNonHist2a")	
	
	'11/populate dtNonHist2b
	f.Data.DataTable.FillFromDictionary("dtNonHist2b","Onhand","PartLoc","New_Onhand2")
	f.Data.Dictionary.Close("Onhand")
	f.Data.DataTable.FillFromDictionary("dtNonHist2b","Cost","PartLoc","New_Inv_Cost2")
	f.Data.Dictionary.Close("Cost")
	f.Data.DataTable.FillFromDictionary("dtNonHist2b","Matl","PartLoc","New_Matl2")
	f.Data.Dictionary.Close("Matl")
	f.Data.DataTable.FillFromDictionary("dtNonHist2b","Labor","PartLoc","New_Labr2")
	f.Data.Dictionary.Close("Labor")
	f.Data.DataTable.FillFromDictionary("dtNonHist2b","Ovhd","PartLoc","New_Ovhd2")
	f.Data.Dictionary.Close("Ovhd")
	f.Data.DataTable.FillFromDictionary("dtNonHist2b","Outs","PartLoc","New_Outs2")
	f.Data.Dictionary.Close("Outs")
	f.Data.DataTable.FillFromDictionary("dtNonHist2b","Freight","PartLoc","New_Frgt2")
	f.Data.Dictionary.Close("Freight")
	f.Data.DataTable.FillFromDictionary("dtNonHist2b","Oth","PartLoc","New_Oth2")
	f.Data.Dictionary.Close("Oth")		
	
	f.Data.DataTable.Merge("dtNonHist2b","dthasHist2",True,3)
	f.Data.DataTable.Close("dtNonHist2b")
'	f.Data.DataView.Create("dthasHist2","dvHasHist2")
'	f.Data.DataView.ToDataTable("dthasHist2","dvHasHist2","AllParts",True)
'	f.Data.DataTable.Close("dthasHist2")
	
	f.Data.DataTable.AddExpressionColumn("dthasHist2","DATE_HISTORY1","String","Substring(Convert([Date_Hist1],System.String),5,2) + '/' + Substring(Convert([Date_Hist1],System.String),7,2) + '/' + Substring(Convert([Date_Hist1],System.String),1,4)")
	f.Data.DataTable.AddExpressionColumn("dthasHist2","DATE_HISTORY2","String","Substring(Convert([Date_Hist2],System.String),5,2) + '/' + Substring(Convert([Date_Hist2],System.String),7,2) + '/' + Substring(Convert([Date_Hist2],System.String),1,4)")
	
	'chkExtraInfo is obsolete, so it will never enter this
	f.Intrinsic.Control.If(v.Screen.frmXStatus!chkExtraInfo.Value,=,1)
		f.Data.DataTable.AddExpressionColumn("dthasHist2","Ext_Price1","float","[New_Onhand1] * [Amt_Price]")
		f.Data.DataTable.AddExpressionColumn("dthasHist2","Ext_Price2","float","[New_Onhand2] * [Amt_Price]")		
	f.Intrinsic.Control.EndIf

	f.Data.DataTable.AddExpressionColumn("dthasHist2","Ext_Cost1","float","[New_Onhand1] * [New_Inv_Cost1]")
	f.Data.DataTable.AddExpressionColumn("dthasHist2","Ext_Cost2","float","[New_Onhand2] * [New_Inv_Cost2]")	
	
	F.Data.DataTable.AddExpressionColumn("dthasHist2","InvCostChange",Float,"Ext_Cost2 - Ext_Cost1")
	F.Data.DataTable.AddColumn("dthasHist2","InvTrans",Float,0.00)
	
	v.Local.dStart.Set(v.Screen.frmXStatus!dtpStart.Value)
	v.Local.dEnd.Set(v.Screen.frmXStatus!dtpEnd.Value)

	f.Intrinsic.String.Split(v.Screen.frmXStatus!ddlGL.Text,"~",v.Local.sGL)
	f.Intrinsic.String.Build("select PART+LOCN as PARTLOC, SUM(DR_Amount - CR_Amount) as GL_CHANGE from GL_INVENTORY_DTLS WHERE POST_DATE BETWEEN '{0}' AND '{1}' AND PROD_LINE IN('{2}') and Account = '{3}' GROUP BY PART, LOCN",v.Local.dStart.FormatYYYYMMDD,v.Local.dEnd.FormatYYYYMMDD,v.Global.sPL,v.Local.sGL(0).Trim,v.Local.sSQL)	
	
	F.Data.Dictionary.CreateFromSQL("GLDict","con",v.Local.sSQL)
	f.Data.Dictionary.SetDefaultReturn("GLDict",0.00)	
	f.Data.DataTable.FillFromDictionary("dthasHist2","GLDict","PartLoc","InvTrans")
	f.Data.Dictionary.Close("GLDict")
	
	'AP Transactions	
	v.Local.iYearStart.Declare
	v.Local.iYearEnd.Declare
	v.Local.sStart.Declare
	v.Local.sEnd.Declare
	v.Local.sStart.Set(v.Local.dStart.FormatYYYYMMDD)
	v.Local.sEnd.Set(v.Local.dEnd.FormatYYYYMMDD)
	f.Intrinsic.Date.Year(v.Local.dStart,v.Local.iYearStart)
	f.Intrinsic.Date.Year(v.Local.dEnd,v.Local.iYearEnd)
	
	f.Intrinsic.Control.If(v.Local.iYearStart,<,2000,and,v.Local.iYearEnd,>=,2000)
		f.Intrinsic.String.Build("Select Part + Location as PartLoc, Sum((New_Onhand * New_Inv_Cost) - (Old_Onhand * Old_Inv_Cost)) as APTrans from Inventory_Hist  where (DATE_HISTORY BETWEEN '{0}' AND '991231') and Code_transaction in ('P10','P11')  Group by Part,Location UNION Select Part + Location as PartLoc, Sum((New_Onhand * New_Inv_Cost) - (Old_Onhand * Old_Inv_Cost)) as APTrans from Inventory_Hist  where (DATE_HISTORY BETWEEN '000101' AND '{1}') and Code_transaction in ('P10','P11')  Group by Part,Location",v.Local.sStart.right6,v.Local.sEnd.Right6,v.Local.sSQL)	
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("Select Part + Location as PartLoc, Sum((New_Onhand * New_Inv_Cost) - (Old_Onhand * Old_Inv_Cost)) as APTrans from Inventory_Hist  where (DATE_HISTORY BETWEEN '{0}' AND '{1}') and Code_transaction in ('P10','P11')  Group by Part,Location",v.Local.sStart.right6,v.Local.sEnd.Right6,v.Local.sSQL)	
	f.Intrinsic.Control.EndIf	
	
	f.Data.Dictionary.CreateFromSQL("APTransDict","con",v.Local.sSQL)
	f.Data.Dictionary.SetDefaultReturn("APTransDict",0)
	f.Data.DataTable.AddColumn("dthasHist2","APTrans","float",0)
	f.Data.DataTable.FillFromDictionary("dthasHist2","APTransDict","PartLoc","APTrans")
	f.Data.Dictionary.Close("APTransDict")	
	
	f.Data.DataTable.AddExpressionColumn("dthasHist2","GLChange","float","IsNull([InvTrans],0) + IsNull([APTrans],0)")
	F.Data.DataTable.AddExpressionColumn("dthasHist2","NetChange","float","IsNull([InvCostChange],0) - Isnull([GLChange],0)")
	F.Data.DataTable.AddExpressionColumn("dthasHist2","Balanced","String","IIF([NetChange] >  -0.01 and [NetChange] < 0.01,'Y','')")	
	
'	f.Intrinsic.Control.If(v.Screen.frmXStatus!chDisplayUnchange.Value,=,0)
'		f.Data.DataView.Create("AllParts","dvAllParts",22,"InvCostChange <> 0 or InvTrans <> 0","Part,Location,Date_Hist1")
'		f.Data.DataView.ToDataTable("AllParts","dvAllParts","AllParts2",True)
'		f.Data.DataTable.Close("AllParts")
'		f.Data.DataView.Create("AllParts2","dvAllParts2")
'		f.Data.DataView.ToDataTable("AllParts2","dvAllParts2","AllParts",True)
'		f.Data.DataTable.Close("AllParts2")
'	f.Intrinsic.Control.EndIf
	
	'Debug and compare with INV304P
	f.Intrinsic.Control.If(v.Screen.frmXStatus!chkCompare.Value,=,1)
		F.Data.DataTable.CreateFromSQL("Cost_From_INV304P", "con", "Select Part + Location as PartLoc,Amt_Cost as UnitCost_INV304P,Qty_Onhand as Qty_Onhand_INV304P,Amt_Cost * Qty_Onhand as Cost_INV304P from Z_IV_XSTAT_CUTOFF", True)
		f.Intrinsic.Control.CallSub("Add_Dictionaries","SourceTable","Cost_From_INV304P","KeyColumn","PartLoc","ColumnList","UnitCost_INV304P~Float~0,Qty_Onhand_INV304P~Float~0,Cost_INV304P~Float~0","TargetTable","dthasHist2")
		f.Data.DataTable.Close("Cost_From_INV304P")	
		F.Data.DataTable.AddExpressionColumn("dthasHist2","CostDiff","String","IIF([Ext_Cost2] <> [Cost_INV304P],'Y','')")
	f.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Get_Data.End

Program.Sub.Add_Dictionaries.Start
'Parameters: SourceTable,KeyColumn,ColumnList(ColumnName~DataType~DefaultValue),TargetTable
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sColumns.Declare
	v.Local.sDataType.Declare
	v.Local.iCnt.Declare
	v.Local.sHold.Declare
	v.Local.sCol.Declare
	v.Local.sDefaultReturn.Declare
	
	f.Intrinsic.String.Split(v.Args.ColumnList,",",v.Local.sColumns)
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sColumns.UBound,1)
		f.Intrinsic.String.Split(v.Local.sColumns(v.Local.iCnt),"~",v.Local.sHold)
		v.Local.sCol.Set(v.Local.sHold(0).Trim)
		v.Local.sDataType.Set(v.Local.sHold(1).Trim)
		v.Local.sDefaultReturn.set(v.Local.sHold(2).Trim)
		f.Data.Dictionary.CreateFromDataTable(v.Local.sCol,v.Args.SourceTable,v.Args.KeyColumn,v.Local.sCol)
		f.Data.Dictionary.SetDefaultReturn(v.Local.sCol,v.Local.sDefaultReturn)
		f.Data.DataTable.AddColumn(v.Args.TargetTable,v.Local.sCol,v.Local.sDataType,v.Local.sDefaultReturn)
		f.Data.DataTable.FillFromDictionary(v.Args.TargetTable,v.Local.sCol,v.Args.KeyColumn,v.Local.sCol)
		f.Data.Dictionary.Close(v.Local.sCol)	
	f.Intrinsic.Control.Next(v.Local.iCnt)	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}GAB Version: {5}}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Write_GAB_Error_Log","sError",v.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Add_Dictionaries.End

Program.Sub.LoadGvXStatus.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.dDate1Caption.Declare
	v.Local.dDate2Caption.Declare
	v.Local.sDate1.Declare
	v.Local.sDate2.Declare
	v.Local.sCaption.Declare
	
	f.Intrinsic.Control.If(v.Global.bSecondLoad)
		gui.frmXStatus.gsStatus.ClearRows("gvXStatus")
	f.Intrinsic.Control.EndIf
	
	Gui.frmXStatus.gsStatus.AddGridviewFromDatatable("gvXStatus","dthasHist2")	
	
	Gui.frmXStatus.gsStatus.SuspendLayout()
	
	'General grid format
	Gui.frmXStatus.gsStatus.SetGridViewProperty("gvXStatus","OptionsViewShowGroupPanel",True)
	Gui.frmXStatus.gsStatus.SetGridViewProperty("gvXStatus","AllowSort",True)
	Gui.frmXStatus.gsStatus.SetGridViewProperty("gvXStatus","AllowFilter",True)
	Gui.frmXStatus.gsStatus.SetGridViewProperty("gvXStatus","OptionsDetailShowDetailTabs",False)
	Gui.frmXStatus.gsStatus.SetGridViewProperty("gvXStatus","OptionsViewColumnAutoWidth",False)
	Gui.frmXStatus.gsStatus.SetGridViewProperty("gvXStatus","OptionsFindAlwaysVisible",True)
	Gui.frmXStatus.gsStatus.SetGridViewProperty("gvXStatus","OptionsViewShowAutoFilterRow",True)
	Gui.frmXStatus.gsStatus.SetGridViewProperty("gvXStatus","ColumnPanelRowHeight","35")
	'Gui.frmXStatus.gsStatus.SetGridViewProperty("gvXStatus","AllowColumnResizing",True)	
	
	'Gui.frmXStatus.gsStatus.SetGridViewProperty("gvXStatus","OptionsViewRowAutoHeight",True)
	'Gui.frmXStatus.gsStatus.SetGridViewProperty("gvXStatus","ShowGroupPanel",True)
	
	'chkExtraInfo is obsolete, so it will never enter this
	f.Intrinsic.Control.If(v.Screen.frmXStatus!chkExtraInfo.Value,=,1)
		f.Intrinsic.Control.CallSub("Format_Extra_Info","sDate1",v.Local.sDate1,"sDate2",v.Local.sDate2)
	f.Intrinsic.Control.Else
		'Visible Index
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part","VisibleIndex","0")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Location","VisibleIndex","1")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Description","VisibleIndex","2")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Product_Line","VisibleIndex","3")		
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History1","VisibleIndex","4")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand1","VisibleIndex","5")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost1","VisibleIndex","6")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl1","VisibleIndex","7")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr1","VisibleIndex","8")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd1","VisibleIndex","9")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs1","VisibleIndex","10")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt1","VisibleIndex","11")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth1","VisibleIndex","12")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost1","VisibleIndex","13")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History2","VisibleIndex","14")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand2","VisibleIndex","15")	
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost2","VisibleIndex","16")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl2","VisibleIndex","17")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr2","VisibleIndex","18")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd2","VisibleIndex","19")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs2","VisibleIndex","20")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt2","VisibleIndex","21")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth2","VisibleIndex","22")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost2","VisibleIndex","24")	
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvCostChange","VisibleIndex","25")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvTrans","VisibleIndex","26")	
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","APTrans","VisibleIndex","27")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","GLChange","VisibleIndex","28")		
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","NetChange","VisibleIndex","29")		
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Balanced","VisibleIndex","30")	
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","HasHist1","VisibleIndex","31")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","HasHist2","VisibleIndex","32")	
	f.Intrinsic.Control.EndIf	
	'Fixed left
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part","Fixed","Left")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Location","Fixed","Left")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Description","Fixed","Left")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Product_Line","Fixed","Left")	
	'Invisible	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","PartLoc","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_Hist1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_Hist2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Hashist1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Hashist2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Hashist2","Visible",False)
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","HasOldValue1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","HasOldValue2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part_Create_Date","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","FirstCutOff","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","SecondCutOff","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","CreatedAfterFirstCutOff","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","CreatedAfterSecondCutOff","Visible",False)

	'Caption
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part","Caption","Part")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Location","Caption","Loc")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Description","Caption","Description")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Product_Line","Caption","PL")
	v.Local.dDate1Caption.Set(v.Screen.frmXStatus!dtpStart.Value)	
	f.Intrinsic.Date.DateAdd("D",-1,v.Local.dDate1Caption,v.Local.dDate1Caption)
	'BN Oct 3 2022
	f.Intrinsic.Control.If(v.Screen.frmXStatus!ddlDateFormat.Text,=,"MM/DD/YYYY")
		v.Local.sDate1.Set(v.Local.dDate1Caption.FormatMM/DD/YYYY)
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History1","Caption",v.Local.dDate1Caption.FormatMM/DD/YYYY)	
		v.Local.dDate2Caption.Set(v.Screen.frmXStatus!dtpEnd.Value)
		v.Local.sDate2.Set(v.Local.dDate2Caption.FormatMM/DD/YYYY)	
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History2","Caption",v.Local.dDate2Caption.FormatMM/DD/YYYY)		
	f.Intrinsic.Control.Else
		v.Local.sDate1.Set(v.Local.dDate1Caption.FormatDD/MM/YYYY)
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History1","Caption",v.Local.dDate1Caption.FormatDD/MM/YYYY)	
		v.Local.dDate2Caption.Set(v.Screen.frmXStatus!dtpEnd.Value)
		v.Local.sDate2.Set(v.Local.dDate2Caption.FormatDD/MM/YYYY)	
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History2","Caption",v.Local.dDate2Caption.FormatDD/MM/YYYY)
	f.Intrinsic.Control.EndIf
		
	f.Intrinsic.String.Build("{0} Onhand",v.Local.sDate1.left5,v.Local.sCaption)	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand1","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Unit Cost",v.Local.sDate1.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost1","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Material",v.Local.sDate1.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl1","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Labor",v.Local.sDate1.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr1","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Overhead",v.Local.sDate1.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd1","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Outside",v.Local.sDate1.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs1","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Freight",v.Local.sDate1.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt1","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Other",v.Local.sDate1.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth1","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Ext.Cost",v.Local.sDate1.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost1","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Onhand",v.Local.sDate2.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand2","Caption",v.Local.sCaption)	
	f.Intrinsic.String.Build("{0} Unit Cost",v.Local.sDate2.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost2","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Material",v.Local.sDate2.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl2","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Labor",v.Local.sDate2.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr2","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Overhead",v.Local.sDate2.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd2","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Outside",v.Local.sDate2.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs2","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Freight",v.Local.sDate2.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt2","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Others",v.Local.sDate2.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth2","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Ext.Cost",v.Local.sDate2.left5,v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost2","Caption",v.Local.sCaption)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","NetChange","Caption","Net Change")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Balanced","Caption","Balanced")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","HasHist1","Caption","Has Hist.1")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","HasHist2","Caption","Has Hist.2")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvCostChange","Caption","Cost Change")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvTrans","Caption","Inventory Transactions")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","NetChange","Caption","Net Change")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","APTrans","Caption","AP Transactions")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part_Create_DateString","Caption","Part Create Date")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","GLChange","Caption","GL Change")
	
	'HeaderWordWrap
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Location","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Description","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Product_Line","HeaderWordWrap","Wrap")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History1","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand1","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost1","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl1","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr1","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd1","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs1","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt1","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth1","HeaderWordWrap","Wrap")

	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost1","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History2","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand2","HeaderWordWrap","Wrap")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost2","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl2","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr2","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd2","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs2","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt2","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth2","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost2","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvCostChange","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvTrans","HeaderWordWrap","Wrap")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","NetChange","HeaderWordWrap","Wrap")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Balanced","HeaderWordWrap","Wrap")
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","APTrans","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part_Create_DateString","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","GLChange","HeaderWordWrap","Wrap")	

	'HeaderVAlignment
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Location","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Description","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Product_Line","HeaderVAlignment","Top")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History1","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand1","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost1","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl1","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr1","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd1","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs1","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt1","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth1","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost1","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History2","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand2","HeaderVAlignment","Top")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost2","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl2","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr2","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd2","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs2","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt2","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth2","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost2","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvCostChange","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvTrans","HeaderVAlignment","Top")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","NetChange","HeaderVAlignment","Top")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Balanced","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","APTrans","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","GLChange","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part_Create_DateString","HeaderVAlignment","Top")

	'For Rowcell click
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part","AllowEdit",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part","ReadOnly",True)
	'Min Width
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part","Width","160")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Location","Width","35")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Description","Width","180")

	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_Hist1","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_Hist2","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History1","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History2","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand1","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost1","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl1","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr1","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd1","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs1","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt1","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth1","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost1","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand2","Width","80")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost2","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl2","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr2","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd2","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs2","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt2","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth2","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost2","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvCostChange","Width","110")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvTrans","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Product_Line","Width","30")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","APTrans","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","GLChange","Width","80")
	
	'Columns for Testing	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part_Create_DateString","Width","80")
	
	'CellForeColor
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part","CellForeColor","Blue")

	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Location","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Description","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Product_Line","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand2","HeaderFontBold",True)	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost2","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl2","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr2","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd2","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs2","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt2","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth2","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost2","HeaderFontBold",True)	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvCostChange","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvTrans","HeaderFontBold",True)	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","APTrans","HeaderFontBold",True)	

	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History2","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","HasHist1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","HasHist2","HeaderFontBold",True)	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","NetChange","HeaderFontBold",True)	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Balanced","HeaderFontBold",True)	
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part_Create_DateString","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","GLChange","HeaderFontBold",True)
	'HeaderHAlignment
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Location","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Product_Line","HeaderHAlignment","Center")

	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand1","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost1","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl1","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr1","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd1","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs1","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt1","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth1","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost1","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand2","HeaderHAlignment","far")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost2","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl2","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr2","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd2","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs2","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt2","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth2","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost2","HeaderHAlignment","far")		
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvCostChange","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvTrans","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","APTrans","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","GLChange","HeaderHAlignment","far")	
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History1","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History2","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","NetChange","HeaderHAlignment","far")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Balanced","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part_Create_DateString","HeaderHAlignment","Center")
	'CellHAlignment
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Location","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Product_Line","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part_Create_DateString","CellHAlignment","Center")

	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History1","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History2","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Balanced","CellHAlignment","Center")
	'DisplayCustomNumeric
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand1","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost1","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl1","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr1","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd1","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs1","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt1","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth1","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost1","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand2","DisplayCustomNumeric","#,###,##0.00")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost2","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl2","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr2","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd2","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs2","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt2","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth2","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost2","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvCostChange","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvTrans","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","NetChange","DisplayCustomNumeric","#,###,##0.0000")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","APTrans","DisplayCustomNumeric","#,###,##0.0000")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","GLChange","DisplayCustomNumeric","#,###,##0.0000")

	'DisplayCustomDatetime
	'Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History","DisplayCustomDatetime","d")
	'Format Balanced color
	gui.frmXStatus.gsStatus.AddStyleFormatCondition("gvXStatus","Balanced","tagBalanced","equal","Y")
	gui.frmXStatus.gsStatus.SetStyleFormatConditionProperty("gvXStatus","Balanced","tagBalanced","backcolor","LightBlue")
	
	'AddSummaryItem
	Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","New_OnHand1","","Sum","","","n")
	Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","Ext_Cost1","","Sum","","","n")
	Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","New_OnHand2","","Sum","","","n")
	Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","Ext_Cost2","","Sum","","","n")	
	Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","InvCostChange","","Sum","","","n")
	Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","InvTrans","","Sum","","","n")
	Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","NetChange","","Sum","","","n")
	Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","APTrans","","Sum","","","n")
	Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","GLChange","","Sum","","","n")
	
	f.Intrinsic.Control.If(v.Screen.frmXStatus!chkCompare.Value,=,1)	
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","CostDiff","MinWidth","50")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","CostDiff","MaxWidth","50")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UnitCost_INV304P","Caption","Inv304P Cost")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Qty_Onhand_INV304P","Caption","Inv304P Onhand")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Cost_INV304P","Caption","Inv304p Extension")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","CostDiff","Caption","Inv304P Cost Diff")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UnitCost_INV304P","HeaderWordWrap","Wrap")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Qty_Onhand_INV304P","HeaderWordWrap","Wrap")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Cost_INV304P","HeaderWordWrap","Wrap")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","CostDiff","HeaderWordWrap","Wrap")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UnitCost_INV304P","HeaderVAlignment","Top")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Qty_Onhand_INV304P","HeaderVAlignment","Top")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Cost_INV304P","HeaderVAlignment","Top")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","CostDiff","HeaderVAlignment","Top")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UnitCost_INV304P","HeaderFontBold",True)
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Qty_Onhand_INV304P","HeaderFontBold",True)
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Cost_INV304P","HeaderFontBold",True)
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","CostDiff","HeaderFontBold",True)		
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UnitCost_INV304P","Width","80")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Qty_Onhand_INV304P","Width","80")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Cost_INV304P","Width","110")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","CostDiff","Width","80")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UnitCost_INV304P","HeaderHAlignment","far")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Qty_Onhand_INV304P","HeaderHAlignment","far")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Cost_INV304P","HeaderHAlignment","far")	
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","CostDiff","CellHAlignment","Center")	
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Cost_INV304P","DisplayCustomNumeric","#,###,##0.0000")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Qty_Onhand_INV304P","DisplayCustomNumeric","#,###,##0.0000")
		Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UnitCost_INV304P","DisplayCustomNumeric","#,###,##0.0000")
		Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","Qty_Onhand_Inv304p","","Sum","","","n")
		Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","Cost_Inv304p","","Sum","","","n")	
		'Format Balanced color
		gui.frmXStatus.gsStatus.AddStyleFormatCondition("gvXStatus","CostDiff","tagCostDiff","equal","Y")
		gui.frmXStatus.gsStatus.SetStyleFormatConditionProperty("gvXStatus","CostDiff","tagCostDiff","backcolor","Salmon")			
	f.Intrinsic.Control.EndIf	
	
	F.Intrinsic.Control.If(V.Caller.GSSVersion,>,2016.2)
		Gui.frmXStatus.gsStatus.AddGridGroupSummaryItem("gvXStatus","Ext_Cost2","Ext_Cost2","Sum","| Tot Cost 1: "," |","n")
		Gui.frmXStatus.gsStatus.AddGridGroupSummaryItem("gvXStatus","Ext_Cost1","Ext_Cost1","Sum","| Tot Cost 2: "," |","n")
		Gui.frmXStatus.gsStatus.AddGridGroupSummaryItem("gvXStatus","InvCostChange","InvCostChange","Sum","| Cost Change: "," |","n")
		Gui.frmXStatus.gsStatus.AddGridGroupSummaryItem("gvXStatus","InvTrans","GL_Change","Sum","| GL Change: "," |","n")
		Gui.frmXStatus.gsStatus.AddGridGroupSummaryItem("gvXStatus","NetChange","NetChange","Sum","| Net Change: "," |","n")
	F.Intrinsic.Control.EndIf
	
	Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","PART","PART","Count","Total Parts: ","",n0)
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvTrans","ToolTip","Total Transactions from GL Inventory Details")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","APTrans","ToolTip","Total Transactions from GL AP Details")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","GLChange","ToolTip","Inventory Transactions + AP Transactions")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","NetChange","ToolTip","Cost Change - GL Change")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvCostChange","ToolTip","Extension 2 - Extension 1")
	
'	f.Intrinsic.Control.CallSub("Deserialize")
	Gui.frmXStatus.gsStatus.ResumeLayout()
	v.Global.bSecondLoad.Set(True)
	Gui.frmXStatus.gsStatus.MainView("gvXStatus")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)		
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGvXStatus.End

Program.Sub.Format_Extra_Info.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare	
	v.Local.sCaption.Declare	
	
	'Visible Index
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Part","VisibleIndex","0")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Location","VisibleIndex","1")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Description","VisibleIndex","2")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Product_Line","VisibleIndex","3")		
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","HasHist1","VisibleIndex","4")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History1","VisibleIndex","5")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand1","VisibleIndex","6")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost1","VisibleIndex","7")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl1","VisibleIndex","8")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr1","VisibleIndex","9")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd1","VisibleIndex","10")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs1","VisibleIndex","11")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt1","VisibleIndex","12")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth1","VisibleIndex","13")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price1","VisibleIndex","14")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost1","VisibleIndex","15")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","HasHist2","VisibleIndex","16")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_History2","VisibleIndex","17")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand2","VisibleIndex","18")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost2","VisibleIndex","19")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl2","VisibleIndex","20")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr2","VisibleIndex","21")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd2","VisibleIndex","22")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs2","VisibleIndex","23")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt2","VisibleIndex","24")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth2","VisibleIndex","25")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price2","VisibleIndex","26")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Cost2","VisibleIndex","27")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvCostChange","VisibleIndex","28")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","InvTrans","VisibleIndex","29")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","NetChange","VisibleIndex","30")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Balanced","VisibleIndex","31")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Amt_Price","VisibleIndex","32")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","AltDesc","VisibleIndex","33")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","ExtraDesc","VisibleIndex","34")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Source","VisibleIndex","35")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UM_Inventory","VisibleIndex","36")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","VisibleIndex","37")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Sort","VisibleIndex","38")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Bin","VisibleIndex","39")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_ABC","VisibleIndex","40")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","LBS","VisibleIndex","41")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Lot","VisibleIndex","42")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Drop","VisibleIndex","43")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Serialize","VisibleIndex","44")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","VisibleIndex","45")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Inactive","VisibleIndex","46")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Name_Vendor","VisibleIndex","47")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info1","VisibleIndex","48")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info2","VisibleIndex","49")		
	'Invisible
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Amt_price","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","PartLoc","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","AltDesc","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","ExtraDesc","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Source","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UM_Inventory","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Sort","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Bin","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_ABC","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","LBS","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_Hist1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Onhand1","VisibleIndex","15")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Inv_Cost1","VisibleIndex","16")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Date_Hist2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Matl2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Labr2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Ovhd2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Outs2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Frgt2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","New_Oth2","Visible",False)	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Lot","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Drop","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Serialize","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Inactive","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Name_Vendor","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Hashist1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Hashist2","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price2","Visible",False)		
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Amt_price","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","AltDesc","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","ExtraDesc","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Source","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UM_Inventory","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Sort","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Bin","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_ABC","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","LBS","Visible",False)	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Lot","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Drop","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Serialize","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Inactive","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Name_Vendor","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info2","Visible",False)	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price1","Visible",False)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price2","Visible",False)		

	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price1","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Ext.Cost",v.Args.sDate1.left5,v.Local.sCaption)	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price2","Caption",v.Local.sCaption)
	f.Intrinsic.String.Build("{0} Ext.Cost",v.Args.sDate2.left5,v.Local.sCaption)	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","AltDesc","Caption","Alt Description")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","ExtraDesc","Caption","Extra Description")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Source","Caption","Source Code")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UM_Inventory","Caption","Inv UM")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","Caption","Lead Time")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Sort","Caption","Sort Code")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Bin","Caption","Bin")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_ABC","Caption","ABC Code")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","LBS","Caption","Weight")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Amt_Price","Caption","Price")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Lot","Caption","Lot/Bin")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Drop","Caption","Drop")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Serialize","Caption","Serialized")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","Caption","Obsolete")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Inactive","Caption","Inactive")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Name_Vendor","Caption","Name Vendor")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info1","Caption","Text Info 1")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info2","Caption","Text Info 2")
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Amt_Price","HeaderWordWrap","Wrap")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","AltDesc","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","ExtraDesc","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Source","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UM_Inventory","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Sort","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Bin","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_ABC","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","LBS","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Lot","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Drop","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Serialize","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Inactive","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Name_Vendor","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info1","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info2","HeaderWordWrap","Wrap")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price1","HeaderWordWrap","Wrap")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price2","HeaderWordWrap","Wrap")
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Amt_Price","HeaderVAlignment","Top")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","AltDesc","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","ExtraDesc","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Source","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UM_Inventory","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Sort","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Bin","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_ABC","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","LBS","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Lot","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Drop","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Serialize","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Inactive","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Name_Vendor","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info1","HeaderVAlignment","Top")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info2","HeaderVAlignment","Top")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price1","HeaderVAlignment","Top")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price2","HeaderVAlignment","Top")	
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","AltDesc","Width","250")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","ExtraDesc","Width","300")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Product_Line","Width","30")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Source","Width","85")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UM_Inventory","Width","65")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","Width","65")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Sort","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Bin","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_ABC","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","LBS","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Amt_Price","Width","80")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price1","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price2","Width","80")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Lot","Width","65")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Drop","Width","65")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Serialize","Width","65")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","Width","65")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Inactive","Width","65")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Name_Vendor","Width","130")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info1","Width","130")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info2","Width","130")
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","AltDesc","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","ExtraDesc","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Product_Line","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Source","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UM_Inventory","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Sort","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Bin","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_ABC","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","LBS","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Amt_Price","HeaderFontBold",True)	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price2","HeaderFontBold",True)
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Lot","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Drop","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Serialize","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Inactive","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Name_Vendor","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info1","HeaderFontBold",True)
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Text_Info2","HeaderFontBold",True)	
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Source","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UM_Inventory","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Sort","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Bin","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_ABC","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","LBS","HeaderHAlignment","Center")		

	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price1","HeaderHAlignment","far")

	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price2","HeaderHAlignment","far")	
	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Amt_Price","HeaderHAlignment","far")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Lot","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Drop","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Serialize","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","HeaderHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Inactive","HeaderHAlignment","Center")

	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","UM_Inventory","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Sort","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Bin","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_ABC","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Lot","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Drop","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Serialize","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","CellHAlignment","Center")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Flag_Inactive","CellHAlignment","Center")	
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Code_Source","CellHAlignment","Center")	

	Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","Ext_Price1","","Sum","","","n")
	Gui.frmXStatus.gsStatus.AddSummaryItem("gvXStatus","Ext_Price2","","Sum","","","n")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","LBS","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Amt_Price","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price1","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsStatus.SetColumnProperty("gvXStatus","Ext_Price2","DisplayCustomNumeric","#,###,##0.00")	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Format_Extra_Info.End

Program.Sub.Deserialize.Start
f.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sSerialize.Declare	
	
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvXStatus",5604,1001,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")	
		Gui.frmXStatus.gsStatus.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}GAB Version: {5}}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.Serialize.Start
f.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.sSerialize.Declare
	v.Local.sSQL.Declare	
	v.Local.sUserID.Declare
	
	F.Global.Security.GetUserID(v.Caller.User,v.Caller.CompanyCode,v.Local.sUserID)
	
	'Delete old registry records
	F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)		
	f.Intrinsic.String.Build("Delete From Gs_Registry Where User_ID = '{0}' and Company = '{1}' and Reg_ID = 5604 and Seq = '1001';",v.Local.sUserID,v.Caller.CompanyCode,v.Local.sSQL)
	F.ODBC.Connection!common.Execute(v.Local.sSQL)
	F.ODBC.Connection!common.Close

	Gui.frmXStatus.gsStatus.Serialize("gvXStatus",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvXStatus",5604,1001,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}GAB Version: {5}}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.gsStatus_RowCellClick.Start
'Shows form with detailed GL and Part history info to help customers find where a record may have gone off balance.
f.Intrinsic.Control.Try
	V.Local.sError.Declare	
	v.Local.sSQL.Declare
	v.Local.sArg.Declare
	v.Local.sLocation.Declare
	v.Local.dStart.Declare
	v.Local.dEnd.Declare
	v.Local.sColumn.Declare
	v.Local.sDateHistPart1.Declare
	v.Local.sDateHistPart2.Declare
	v.Local.dDateHistPart1.Declare
	v.Local.dDateHistPart2.Declare
	v.Local.sHold.Declare

	f.Intrinsic.String.UCase(v.Args.Column,v.Local.sColumn)
	f.Intrinsic.Control.If(V.Local.sColumn,=,"PART")
	
		Gui.frmXStatus.lblStatus.Caption("Loading Part Info...")
		Gui.frmXStatus.lblStatus.Visible(true)	
	
		Gui.frmXStatus.gsStatus.GetCellValueByColumnName("gvXStatus","Location",v.Args.rowIndex,V.Local.sLocation)
		gui.FrmPrtHist.txtPart.Text(v.Args.CellValue)
		gui.FrmPrtHist.txtLoc.Text(v.Local.sLocation)
		
		Gui.frmXStatus.tabInvRec.Enabled(false)

		Gui.frmXStatus.gsStatus.GetCellValueByColumnName("gvXStatus","Date_History1",v.Args.rowIndex,V.Local.sDateHistPart1)
		Gui.frmXStatus.gsStatus.GetCellValueByColumnName("gvXStatus","Date_History2",v.Args.rowIndex,V.Local.sDateHistPart2)

		
		f.Intrinsic.Control.If(v.Local.sDateHistPart1.Trim,<>,"")
			'BN oct 3		
			f.Intrinsic.Control.If(v.Global.sGridDateFormat,=,"DD/MM/YYYY")
				f.Intrinsic.String.Split(v.Local.sDateHistPart1,"/",v.Local.sDateHistPart1)
				v.Local.sHold.Set(v.Local.sDateHistPart1(0))
				v.Local.sDateHistPart1(0).Set(v.Local.sDateHistPart1(1))
				v.Local.sDateHistPart1(1).Set(v.Local.sHold)
				f.Intrinsic.String.Join(v.Local.sDateHistPart1,"/",v.Local.sDateHistPart1)
			f.Intrinsic.Control.EndIf
			v.Local.dDateHistPart1.Set(v.Local.sDateHistPart1)
		f.Intrinsic.Control.Else
			v.Local.dDateHistPart1.Set(v.Screen.frmXStatus!dtpStart.Value)
			f.Intrinsic.Date.DateAdd("d",-1,v.Local.dDateHistPart1,v.Local.dDateHistPart1)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sDateHistPart2.Trim,<>,"")
			'BN oct 3		
			f.Intrinsic.Control.If(v.Global.sGridDateFormat,=,"DD/MM/YYYY")
				f.Intrinsic.String.Split(v.Local.sDateHistPart2,"/",v.Local.sDateHistPart2)
				v.Local.sHold.Set(v.Local.sDateHistPart2(0))
				v.Local.sDateHistPart2(0).Set(v.Local.sDateHistPart2(1))
				v.Local.sDateHistPart2(1).Set(v.Local.sHold)
				f.Intrinsic.String.Join(v.Local.sDateHistPart2,"/",v.Local.sDateHistPart2)
			f.Intrinsic.Control.EndIf
			v.Local.dDateHistPart2.Set(v.Local.sDateHistPart2)
		f.Intrinsic.Control.Else
			v.Local.dDateHistPart2.Set(v.Ambient.Date)
		f.Intrinsic.Control.EndIf		
		
		'Set Date to Part Hist screen date picker for Parts
		gui.FrmPrtHist.dtpFrom.Value(v.Local.dDateHistPart1)
		Gui.FrmPrtHist.dtpTo.Value(v.Local.dDateHistPart2)
		f.Intrinsic.Control.CallSub("cmdLoadPartHist_Click")
		f.Intrinsic.Control.If(v.DataTable.dtPartHistory.RowCount,>,0)
			f.Data.DataTable.SetValue("dtPartHistory",0,"Amount",0)
		f.Intrinsic.Control.EndIf
		
		'Set Date to Part Hist screen date picker for GLs
		v.Local.dStart.Set(v.Screen.frmXStatus!dtpStart.Value)
		v.Local.dEnd.Set(v.Screen.frmXStatus!dtpEnd.Value)
		gui.FrmPrtHist.dtpGLStart.Value(v.Local.dStart)
		gui.FrmPrtHist.dtpGLEnd.Value(v.Local.dEnd)
		f.Intrinsic.Control.CallSub("cmdLoadGLHist_Click")
		
		Gui.frmXStatus.tabInvRec.Enabled(True)
		Gui.FrmPrtHist..Show
		Gui.frmXStatus.lblStatus.Visible(False)		
		
	f.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry

Program.Sub.gsStatus_RowCellClick.End

Program.Sub.cmdLoadPartHist_Click.Start
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare
	v.Local.sArg.Declare
	v.Local.sLocation.Declare
	v.Local.sError.Declare
	v.Local.dStart.Declare
	v.Local.dEnd.Declare
	v.Local.sParLoc.Declare
	v.Local.sColumn.Declare
	v.Local.sDateHistPart1.Declare
	v.Local.sDateHistPart2.Declare
	v.Local.dDateHistPart1.Declare
	v.Local.dDateHistPart2.Declare

	v.Local.dDateHistPart1.Set(v.Screen.FrmPrtHist!dtpFrom.Value)
	v.Local.dDateHistPart2.Set(v.Screen.FrmPrtHist!dtpTo.Value)
	F.Intrinsic.String.Build("Select Date_History,Code_Transaction,Date_action,Inv_Hist_Time,Quantity,Transaction_Desc,Refer_2,Old_OnHand,New_OnHand,Old_Inv_Cost,Cost,New_Inv_cost,Quantity * Cost as Amount from V_Inventory_Hist where (DATE_HISTORY BETWEEN '{2}' AND '{3}')  and Part = '{0}' and Location = '{1}' Order by Date_History,Inv_Hist_Time",v.Screen.FrmPrtHist!txtPart.Text,v.Screen.FrmPrtHist!txtLoc.Text,v.Local.dDateHistPart1.PervasiveDate,v.Local.dDateHistPart2.pervasiveDate,v.Local.sSQL)
	
	f.Intrinsic.Control.If(v.DataTable.dtPartHistory.Exists)
		F.Data.DataTable.Close("dtPartHistory")
	f.Intrinsic.Control.EndIf
	
	F.data.DataTable.CreateFromSQL("dtPartHistory","con",v.Local.sSQL,true)	
	f.Data.DataTable.AddExpressionColumn("dtPartHistory","backDateChk","boolean","Date_History = Date_Action")	

	F.Intrinsic.Control.CallSub(loadgvGXPartHistory)
	v.Global.bGvPartHistory.Set(True)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdLoadPartHist_Click.End

Program.Sub.cmdLoadGLHist_Click.Start
f.Intrinsic.Control.Try
	v.Local.sSQL.Declare
	v.Local.sArg.Declare
	v.Local.sLocation.Declare
	v.Local.sPart.Declare
	v.Local.sError.Declare
	v.Local.dStart.Declare
	v.Local.dEnd.Declare
	v.Local.sParLoc.Declare
	v.Local.sColumn.Declare
	v.Local.sDateHistPart1.Declare
	v.Local.sDateHistPart2.Declare
	v.Local.dDateHistPart1.Declare
	v.Local.dDateHistPart2.Declare
	v.Local.sGLAccount.Declare
	v.Local.sFilter.Declare
	V.Local.sHold.Declare
	v.Local.dHold.Declare
	v.Local.iYear.Declare
	v.Local.iCnt.Declare
	
	v.Local.dStart.Set(v.Screen.FrmPrtHist!dtpGLStart.Value)
	v.Local.dEnd.Set(v.Screen.FrmPrtHist!dtpGLEnd.Value)
	f.Intrinsic.String.Split(v.Screen.frmXStatus!ddlGL.Text,"~",v.Local.sGLAccount)

	''working
	f.Intrinsic.string.Build("Select SubString(post_date,5,2) + '/' + right(Post_Date,2) + '/' + Left(Post_date,4) as Post_Date ,SubString(Invc_Date,5,2) + '/' + right(Invc_Date,2) + '/' + Left(Invc_Date,4) as Invc_Date, Batch,   DR_Amount - CR_Amount as Amount, Quantity, Description,Reference,Part, Locn,Prod_Line from GL_Inventory_DTLS where  (Post_Date Between '{2}' and '{3}') and Part = '{0}' and Locn = '{1}' and Account = '{4}' order by Post_Date",v.Screen.FrmPrtHist!txtPart.Text,v.Screen.FrmPrtHist!txtLoc.Text,v.Local.dStart.FormatYYYYMMDD,v.Local.dEnd.FormatYYYYMMDD,v.Local.sGLAccount(0).Trim,v.Local.sSQL)
	
	f.Intrinsic.Control.If(v.DataTable.dtGLHist.Exists)
		f.Data.DataTable.Close("dtGLHist")
	f.Intrinsic.Control.EndIf
	
	f.Data.DataTable.CreateFromSQL("dtGLHist","con",v.Local.sSQL,true)	

	
	'Add GL_AP_Detail
	f.Intrinsic.Date.Year(v.Local.dStart,v.Local.iYear)
	f.Intrinsic.Math.Sub(v.Local.iYear,1,v.Local.iYear)
	f.Intrinsic.String.Build("01/01/{0}",v.Local.iYear,v.Local.shold)
	v.Local.dHold.Set(v.Local.shold)	
	v.Local.shold.Set(v.Local.dHold.FormatYYYYMMDD)
		
	f.Intrinsic.String.Build("select SubString(post_date,5,2) + '/' + right(Post_Date,2) + '/' + Left(Post_date,4) as Post_Date,SubString(Invc_Date,5,2) + '/' + right(Invc_Date,2) + '/' + Left(Invc_Date,4) as Invc_Date,Batch,Amount_Cmpny as Amount,Quantity,'AP Code: ' + Convert(AP_Code,SQL_Char) + ' GL: ' + Convert(GL_Number,SQL_Char)  as Description, 'PO: ' + PO_Num + '-' + PO_Line as Reference, PO_Num,PO_Line,Po_Num + PO_Line + '0' as PO from GL_AP_Detail where Post_Date between '{0}' and '{1}'",v.Local.dStart.FormatYYYYMMDD,v.Local.dEnd.FormatYYYYMMDD,v.Local.sSQL)
	f.Data.DataTable.CreateFromSQL("APDetail","con",v.Local.sSQL,True)	
	f.Data.DataTable.AddColumn("APDetail","Part","String","")
	f.Data.DataTable.AddColumn("APDetail","Locn","String","")

	f.Intrinsic.Control.If(v.Local.iYear,<,2000)
		f.Intrinsic.String.Build("Select Purchase_Order + PO_Line as PO, Part,Location as Locn from PO_History where Date_Received >= '{0}' UNION select Purchase_Order + PO_Line as PO, Part,Location as Locn from PO_History where Date_Received between '000101' and '791231'",v.Local.dHold.righ6,v.Local.sSQL)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("Select Purchase_Order + PO_Line as PO, Part,Location as Locn from PO_History where Date_Received between '{0}' and '791231'",v.Local.dHold.righ6,v.Local.sSQL)	
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("POHist","con",v.Local.sSQL,True)	
	
	f.Intrinsic.Control.CallSub("Add_Using_Dictionaries","SourceTable","POHist","KeyColumn","PO","ColumnList","Part~String~,Locn~String~","TargetTable","APDetail")
	f.Data.DataTable.Close("POHist")
	
	f.Data.DataTable.AddExpressionColumn("APDetail","PartLoc","String","[Part] + [Locn]")
	f.Data.DataTable.AddExpressionColumn("APDetail","Prod_Line","String","")
	f.Data.Dictionary.CreateFromSQL("Prod_LineDict","con","Select Part + Location as PartLoc,Product_Line from Inventory_Mstr")
	f.Data.Dictionary.SetDefaultReturn("Prod_LineDict","")	
	f.Data.DataTable.FillFromDictionary("APDetail","Prod_LineDict","PartLoc","Prod_Line")
	f.Data.Dictionary.Close("Prod_LineDict")	
		
	v.Local.sPart.Set(v.Screen.FrmPrtHist!txtPart.Text)
	v.Local.sLocation.Set(v.Screen.FrmPrtHist!txtLoc.Text)
	f.Intrinsic.String.Build("Part = '{0}' and Locn = '{1}'",v.Local.sPart.PSQLFriendly,v.Local.sLocation,v.Local.sFilter)
	f.Data.DataView.Create("APDetail","dvAPDetail",22,v.Local.sFilter,"Post_date")	
	f.Intrinsic.Control.If(v.DataView.APDetail!dvAPDetail.RowCount,>,0)
	
		f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataView.APDetail!dvAPDetail.RowCount--,1)
			f.Data.DataTable.AddRow("dtGLHist","Post_Date",v.DataView.APDetail!dvAPDetail(v.Local.iCnt).Post_Date!FieldValString,"Invc_Date",v.DataView.APDetail!dvAPDetail(v.Local.iCnt).Invc_Date!FieldValString,"Batch",v.DataView.APDetail!dvAPDetail(v.Local.iCnt).Batch!FieldValString,"Amount",v.DataView.APDetail!dvAPDetail(v.Local.iCnt).Amount!FieldValString,"Quantity",v.DataView.APDetail!dvAPDetail(v.Local.iCnt).Quantity!FieldValString,"Description",v.DataView.APDetail!dvAPDetail(v.Local.iCnt).Description!FieldValString,"Reference",v.DataView.APDetail!dvAPDetail(v.Local.iCnt).Reference!FieldValString,"Part",v.DataView.APDetail!dvAPDetail(v.Local.iCnt).Part!FieldValString,"Locn",v.DataView.APDetail!dvAPDetail(v.Local.iCnt).Locn!FieldValString,"Prod_Line",v.DataView.APDetail!dvAPDetail(v.Local.iCnt).Prod_Line!FieldValString)			
		f.Intrinsic.Control.Next(v.Local.iCnt)
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Close("APDetail")	
	
	f.Intrinsic.Control.CallSub(loadgvGXGLHist)	
	v.Global.bgvGLHist.Set(True)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdLoadGLHist_Click.End

Program.Sub.loadgvGXPartHistory.Start
f.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.FrmPrtHist.GsGCPrtHist.AddGridviewFromDatatable("gvPartHistory","dtPartHistory")
	Gui.FrmPrtHist.GsGCPrtHist.SuspendLayout()
	
	Gui.FrmPrtHist.GsGCPrtHist.SetGridViewProperty("gvPartHistory","MultiSelect",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetGridViewProperty("gvPartHistory","AllowSort",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetGridViewProperty("gvPartHistory","AllowFilter",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetGridViewProperty("gvPartHistory","AllowColumnResizing",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetGridViewProperty("gvPartHistory","OptionsViewShowAutoFilterRow",True)	
	Gui.FrmPrtHist.GsGCPrtHist.SetGridViewProperty("gvPartHistory","ShowGroupPanel",True)
	'Gui.FrmPrtHist.GsGCPrtHist.SetGridViewProperty("gvPartHistory","EnableAppearanceOddRow",False)
	Gui.FrmPrtHist.GsGCPrtHist.SetGridViewProperty("gvPartHistory","OptionsViewColumnAutoWidth",False)	

	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_History","AllowEdit",False)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Code_Transaction","AllowEdit",False)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_OnHand","AllowEdit","False")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Quantity","AllowEdit","False")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_OnHand","AllowEdit",False)
	Gui.frmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_Inv_Cost","AllowEdit",False)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Cost","AllowEdit",False)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_Inv_Cost","AllowEdit",false)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_action","AllowEdit",false)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Inv_Hist_Time","AllowEdit",False)
	
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_History","Caption","Date")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Code_Transaction","Caption","Trans Code")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_OnHand","Caption","Old Onhand")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Quantity","Caption","Qty Change")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_OnHand","Caption","New Onhand")
	Gui.frmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_Inv_Cost","Caption","Old Cost")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Cost","Caption","Trans Cost")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_Inv_Cost","Caption","New Cost")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_action","Caption","Date Action")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Inv_Hist_Time","Caption","Date Time")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Transaction_Desc","Caption","Reference")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Refer_2","Caption","Reference 2")
	
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_History","HeaderHAlignment","Center")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Code_Transaction","HeaderHAlignment","Center")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_OnHand","HeaderHAlignment","far")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Quantity","HeaderHAlignment","far")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_OnHand","HeaderHAlignment","far")
	Gui.frmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_Inv_Cost","HeaderHAlignment","far")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Cost","HeaderHAlignment","far")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_Inv_Cost","HeaderHAlignment","far")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_action","HeaderHAlignment","Center")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Inv_Hist_Time","HeaderHAlignment","Center")

	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Amount","HeaderHAlignment","far")	
	
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_History","CellHAlignment","Center")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_OnHand","CellHAlignment","far")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_action","CellHAlignment","Center")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Inv_Hist_Time","CellHAlignment","Center")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Code_Transaction","CellHAlignment","Center")
	
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Amount","HeaderFontBold",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_History","HeaderFontBold",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Code_Transaction","HeaderFontBold",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_OnHand","HeaderFontBold","True")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Quantity","HeaderFontBold","True")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_OnHand","HeaderFontBold",True)
	Gui.frmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_Inv_Cost","HeaderFontBold",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Cost","HeaderFontBold",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_Inv_Cost","HeaderFontBold",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_action","HeaderFontBold",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Inv_Hist_Time","HeaderFontBold",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Transaction_Desc","HeaderFontBold",True)
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Refer_2","HeaderFontBold",True)	
	
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Transaction_Desc","Width","180")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Refer_2","Width","180")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Amount","MinWidth","85")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_Onhand","MinWidth","85")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_Onhand","MinWidth","85")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_Inv_Cost","MinWidth","85")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_Inv_Cost","MinWidth","85")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Cost","MinWidth","85")	
	
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_OnHand","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Quantity","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_OnHand","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_Inv_Cost","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Cost","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_Inv_Cost","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Amount","DisplayCustomNumeric","#,###,##0.00")
	
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_action","DisplayCustomDatetime","d")
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_History","DisplayCustomDatetime","d")	
	
	'Visible Index: Date_History, Code_Transaction, Old_OnHand, Quantity, New_OnHand, Old_Inv_Cost, Cost,Amount, New_Inv_cost, Date_action, Inv_Hist_Time,Transaction_Desc,Refer_2, backDateChk
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_History","VisibleIndex",0)
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Code_Transaction","VisibleIndex",1)
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_OnHand","VisibleIndex",2)
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Quantity","VisibleIndex",3)
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_OnHand","VisibleIndex",4)
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Old_Inv_Cost","VisibleIndex",5)
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Cost","VisibleIndex",6)	
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","New_Inv_cost","VisibleIndex",7)
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Amount","VisibleIndex",8)		
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Date_action","VisibleIndex",9)
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Inv_Hist_Time","VisibleIndex",10)
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Transaction_Desc","VisibleIndex",11)
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","Refer_2","VisibleIndex",12)
'	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","backDateChk","VisibleIndex",13)
	
	Gui.FrmPrtHist.GsGCPrtHist.SetColumnProperty("gvPartHistory","backDateChk","Visible","false")
	
	'working'
	Gui.FrmPrtHist.GsGCPrtHist.AddSummaryItem("gvPartHistory","Quantity","Tag","sum","","","n")
	Gui.FrmPrtHist.GsGCPrtHist.AddSummaryItem("gvPartHistory","Amount","Tag","sum","","","n")
	

	Gui.FrmPrtHist.GsGCPrtHist.addStyleFormatCondition("gvPartHistory","backDateChk","backDate","NotEqual",true)
	
	Gui.FrmPrtHist.GsGCPrtHist.setStyleFormatConditionProperty("gvPartHistory","backDateChk","backDate","backColor","pink")
	Gui.FrmPrtHist.GsGCPrtHist.setStyleFormatConditionProperty("gvPartHistory","backDateChk","backDate","applyToRow","True")
	
	Gui.FrmPrtHist.GsGCPrtHist.ResumeLayout()
	Gui.FrmPrtHist.GsGCPrtHist.MainView("gvPartHistory")

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry	
Program.Sub.loadgvGXPartHistory.End

Program.Sub.FrmPrtHist_UnLoad.Start
Gui.FrmPrtHist..Visible(false)
Program.Sub.FrmPrtHist_UnLoad.End

Program.Sub.loadgvGXGLHist.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sAllColumns.Declare
	
	Gui.FrmPrtHist.GSGCGLHist.AddGridviewFromDatatable("gvGLHist","dtGLHist")
	
	Gui.frmPrtHist.GSGCGLHist.SuspendLayout()
	
	v.Local.sAllColumns.Set("Post_Date,Invc_Date,Part,Locn,Prod_Line,Batch,Amount,Quantity,Description,Reference")
	f.Intrinsic.Control.CallSub("FormatBulk","sForm","frmPrtHist","GS","GSGCGLHist","GV","gvGLHist","sInputColumns",v.Local.sAllColumns,"sProperty","VisibleIndex")
	
	Gui.frmPrtHist.GSGCGLHist.SetGridviewProperty("gvGLHist","MultiSelect",True)
	Gui.frmPrtHist.GSGCGLHist.SetGridviewProperty("gvGLHist","AllowSort",True)
	Gui.frmPrtHist.GSGCGLHist.SetGridviewProperty("gvGLHist","AllowFilter",True)
	Gui.frmPrtHist.GSGCGLHist.SetGridviewProperty("gvGLHist","AllowColumnResizing",True)
	Gui.frmPrtHist.GSGCGLHist.SetGridviewProperty("gvGLHist","OptionsViewShowAutoFilterRow",True)	
	Gui.frmPrtHist.GSGCGLHist.SetGridviewProperty("gvGLHist","ShowGroupPanel",True)
	'Gui.frmPrtHist.GSGCGLHist.SetGridviewProperty("gvGLHist","EnableAppearanceOddRow",False)
	Gui.frmPrtHist.GSGCGLHist.SetGridviewProperty("gvGLHist","OptionsViewColumnAutoWidth",False)	
	
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Post_date","AllowEdit",False)
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Batch","AllowEdit",False)
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Prod_Line","AllowEdit",False)
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Part","AllowEdit",False)
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Locn","AllowEdit",False)
	'Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Amount","AllowEdit",False)
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Quantity","AllowEdit",False)
	
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Post_date","Caption","Post Date")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Invc_date","Caption","Inv Trans Date")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Batch","Caption","Batch")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Prod_Line","Caption","PL")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Part","Caption","Part")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Locn","Caption","Loc")
	'Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Amount","Caption","Amount")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Quantity","Caption","Qty")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Amount","Caption","Amount")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Locn","Caption","Locn")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Description","Caption","Description")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Reference","Caption","Reference")
	
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Batch","CellHAlignment","Center")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Prod_Line","CellHAlignment","Center")
	
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Post_date","HeaderHAlignment","Center")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Batch","HeaderHAlignment","Center")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Prod_Line","HeaderHAlignment","Center")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Part","HeaderHAlignment","Center")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Locn","HeaderHAlignment","Center")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Amount","HeaderHAlignment","far")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Quantity","HeaderHAlignment","far")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Locn","CellHAlignment","Center")
	
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Post_date","HeaderFontBold","True")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Batch","HeaderFontBold","True")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Prod_Line","HeaderFontBold","True")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Part","HeaderFontBold","True")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Locn","HeaderFontBold","True")
	'Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Amount","HeaderFontBold","True")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Quantity","HeaderFontBold","True")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Amount","HeaderFontBold","True")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Description","HeaderFontBold","True")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Reference","HeaderFontBold","True")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Invc_Date","HeaderFontBold","True")
	
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Batch","Width","45")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Prod_Line","Width","30")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Part","Width","160")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Locn","Width","30")
	
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Description","Width","180")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Reference","Width","180")
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Invc_Date","Width","100")
	
	Gui.FrmPrtHist.GSGCGLHist.AddSummaryItem("gvGLHist","Amount","Tag","sum","","","n")
	Gui.FrmPrtHist.GSGCGLHist.AddSummaryItem("gvGLHist","Quantity","Tag","sum","","","n")
	
	Gui.FrmPrtHist.GSGCGLHist.SetColumnProperty("gvGLHist","Post_date","DisplayCustomDatetime","d")
	
	Gui.FrmPrtHist.GSGCGLHist.ResumeLayout()
	Gui.FrmPrtHist.GSGCGLHist.MainView("gvGLHist")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry	
Program.Sub.loadgvGXGLHist.End

Program.Sub.frmXStatus_UnLoad.Start
f.Intrinsic.Control.CallSub("Unload")
Program.Sub.frmXStatus_UnLoad.End

Program.Sub.cmdRefreshNonInv.Start
'Loads the second tab which displays info over non-inventory parts.
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.dStart.Declare
	v.Local.sSQL.Declare
	v.Local.dEnd.Declare
	v.Local.dStart.Set(v.Screen.frmXStatus!dtpStart.Value)
	v.Local.dEnd.Set(v.Screen.frmXStatus!dtpEnd.Value)
	v.Local.sStart.Declare
	v.Local.sEnd.Declare
	v.Local.sStart.Set(v.Local.dStart.FormatYYYYMMDD)
	v.Local.sEnd.Set(v.Local.dEnd.FormatYYYYMMDD)
	v.Local.sGL.Declare	
	v.Local.sHold.Declare
	v.Local.iYear.Declare
	v.Local.dStartAPDetail.Declare
	v.Local.iCnt.Declare
	v.Local.sFilter.Declare
	v.Local.fSum.Declare
	v.Local.sPartLoc.Declare
	v.Local.sPartLocRef.Declare
	v.Local.iFlag.Declare

	'Validate GL
	f.Intrinsic.Control.If(v.Screen.frmXStatus!ddlGL.Text,=,"")
		f.Intrinsic.UI.Msgbox("Please select a GL Account")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf

	'Validate Date Start and Date End
	v.Local.dStart.Set(v.Screen.frmXStatus!dtpStart.Value)
	v.Local.dEnd.Set(v.Screen.frmXStatus!dtpEnd.Value)
	f.Intrinsic.Control.If(v.Local.dEnd,<,v.Local.dStart)
		f.Intrinsic.UI.Msgbox("Date End must be equal or after Date Start")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	Gui.frmXStatus.cmdRefreshNonInv.Enabled(False)
	Gui.frmXStatus.lblStatus.Visible(True)
	
	Gui.frmXStatus.lblStatus.Caption("Getting Product Line...")
	
	f.Intrinsic.String.Split(v.Screen.frmXStatus!ddlGL.Text,"~",v.Local.sHold)
	v.Global.sPL.Set(v.Local.sHold(1).Trim)
	f.Intrinsic.String.Replace(v.Global.sPL,",","','",v.Global.sPL)
	
	Gui.frmXStatus.lblStatus.Caption("Loading Non Inventory Parts...")
	f.Intrinsic.String.Split(v.Screen.frmXStatus!ddlGL.Text,"~",v.Local.sGL)
	
	f.Intrinsic.Control.If(v.Local.sStart,<,"20000101",and,V.Local.sEnd,>=,"20000101")
		f.Intrinsic.String.Build("Select Part + Location as PartLoc,Purchase_Order + PO_Line + Receiver_No as Ref,Convert(1,SQL_Bit) as InRangeRef,Part, Location, Vendor, Receiver_No, Purchase_Order, Left(PO_Line,3) as PO_Line, If(Date_Received = '','',If( SubString(Date_Received,1,2) < '80',SubString(Date_Received,3,2) + '/' + Right(Date_Received,2)+ '/' +  '20' + Left(Date_Received,2) ,SubString(Date_Received,3,2) + '/' + Right(Date_Received,2)+ '/' +  '19' + Left(Date_Received,2))) as Date_Received,'' as Post_Date, Extension, Convert(0,SQL_Bit) as NonInv,Date_Received as Date_Received2 from PO_HISTORY Where Date_Received BETWEEN '{0}' AND '991231'  Union  Select Part + Location as PartLoc,Purchase_Order + PO_Line + Receiver_No as Ref,Convert(1,SQL_Bit) as InRangeRef,Part, Location, Vendor, Receiver_No, Purchase_Order, Left(PO_Line,3) as PO_Line, If(Date_Received = '','',If( SubString(Date_Received,1,2) < '80',SubString(Date_Received,3,2) + '/' + Right(Date_Received,2)+ '/' +  '20' + Left(Date_Received,2) ,SubString(Date_Received,3,2) + '/' + Right(Date_Received,2)+ '/' +  '19' + Left(Date_Received,2))) as Date_Received,'' as Post_Date, Extension, Convert(0,SQL_Bit) as NonInv,Date_Received as Date_Received2 from PO_HISTORY Where Date_Received BETWEEN '000101' AND '{1}' ",v.Local.sStart.Right6,v.Local.sEnd.Right6,v.Local.sSQL)	
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("Select Part + Location as PartLoc,Purchase_Order + PO_Line + Receiver_No as Ref,Convert(1,SQL_Bit) as InRangeRef,Part, Location, Vendor, Receiver_No, Purchase_Order, Left(PO_Line,3) as PO_Line, If(Date_Received = '','',If( SubString(Date_Received,1,2) < '80',SubString(Date_Received,3,2) + '/' + Right(Date_Received,2)+ '/' +  '20' + Left(Date_Received,2) ,SubString(Date_Received,3,2) + '/' + Right(Date_Received,2)+ '/' +  '19' + Left(Date_Received,2))) as Date_Received,'' as Post_Date, Extension, Convert(0,SQL_Bit) as NonInv,Date_Received as Date_Received2 from PO_HISTORY Where Date_Received BETWEEN '{0}' AND '{1}' ",v.Local.sStart.Right6,v.Local.sEnd.Right6,v.Local.sSQL)	
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.If(v.DataTable.dtNonInv.Exists)
		f.Data.DataTable.Close("dtNonInv")
	f.Intrinsic.Control.EndIf	
	f.Data.DataTable.CreateFromSQL("dtNonInv","con",v.Local.sSQL,true)
	
	f.Data.Dictionary.CreateFromSQL("InvDict","con","Select Part + Location as PartLoc,Convert(1,SQL_Bit) as Inv from Inventory_Mstr")
	f.Data.Dictionary.SetDefaultReturn("InvDict",False)
	f.Data.DataTable.FillFromDictionary("dtNonInv","InvDict","PartLoc","NonInv")
	f.Data.Dictionary.Close("InvDict")
	
	'Get back 1 year data from GL_AP_Detail
	'AP_Code = '9' !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	f.Intrinsic.Date.Year(v.Local.dStart,v.Local.iYear)
	f.Intrinsic.Math.Sub(v.Local.iYear,1,v.Local.iYear)	
	f.Intrinsic.String.Build("01/01/{0}",v.Local.iYear,v.Local.sHold)
	v.Local.dStartAPDetail.Set(v.Local.sHold)
	f.Intrinsic.String.Build("Select '' as PartLoc,PO_Num + PO_Line + '0' + Receiver as Ref,Convert(0,SQL_Bit) as InRangeRef,Amount_Cmpny,SubString(Post_Date,5,2) + '/' + Right(Post_date,2) + '/' + Left(Post_Date,4)  as Post_Date,GL_Number from  GL_AP_Detail where Post_Date >= '{0}' and AP_Code = '09'",v.Local.dStartAPDetail.FormatYYYYMMDD,v.Local.sSQL)
	f.Data.DataTable.CreateFromSQL("AP","con",v.Local.sSQL,True)
	
	f.Intrinsic.Control.If(v.DataTable.AP.RowCount,=,0)
		f.Intrinsic.Control.If(v.Global.bGvNonInv)
			gui.frmXStatus.gsNonInv.ClearRows("gvNonInv")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.DataTable.dtNonInv2.Exists)
			f.Data.DataTable.Close("dtNonInv2")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.UI.Msgbox("No data found from GL_AP_Detail","Attention")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'GL Number
	f.Data.DataTable.AddColumn("dtNonInv","GL_Number","String","")
	f.Data.Dictionary.CreateFromDataTable("APGLDict","AP","Ref","GL_Number")
	f.Data.Dictionary.SetDefaultReturn("APGLDict","")
	f.Data.DataTable.FillFromDictionary("dtNonInv","APGLDict","Ref","GL_Number")
	f.Data.Dictionary.Close("APGLDict")	
	
	'Get Non Inventory transactions having GL_Number
	f.Intrinsic.String.Build("NonInv = 0 and GL_Number = '{0}'",v.Local.sGL(0),v.Local.sFilter)
	f.Data.DataView.Create("dtNonInv","dvNonInv",22,v.Local.sFilter,"Date_Received2,Location,Part")
	f.Intrinsic.Control.If(v.DataView.dtNonInv!dvNonInv.RowCount,=,0)
		f.Intrinsic.String.Build("No transaction found with GL account {0}. Do you want to display whatever GL with Receipt Date falling within the date range?",v.Local.sGL(0).Trim,v.Local.sHold)
		Function.Intrinsic.UI.MsgBox (v.Local.sHold, "No Transaction Found",4,v.Local.iFlag)
		f.Intrinsic.Control.If(v.Local.iFlag,=,7)
			'No, exit
			f.Data.DataTable.Close("dtNonInv")
			f.Data.DataTable.Close("AP")
			f.Intrinsic.Control.If(v.Global.bGvNonInv)
				gui.frmXStatus.gsNonInv.ClearRows("gvNonInv")
			f.Intrinsic.Control.EndIf
			gui.frmXStatus.lblStatus.Caption("")
			f.Intrinsic.Control.ExitSub	
		f.Intrinsic.Control.Else
		
			'Yes, set filter without GL number condition
			f.Data.DataView.SetFilter("dtNonInv","dvNonInv","NonInv = 0")
			f.Data.DataView.SetSort("dtNonInv","dvNonInv","Date_Received2,Location,Part")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtNonInv2.Exists)
		f.Data.DataTable.Close("dtNonInv2")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.ToDataTable("dtNonInv","dvNonInv","dtNonInv2",True)
	f.Data.DataTable.Close("dtNonInv")
	
	f.Data.DataTable.AddColumn("dtNonInv2","APChange","Float",0)
	
	'InRangeDict1
	f.Data.Dictionary.CreateFromDatatable("InRangeDict1","dtNonInv2","Ref","InRangeRef")
	f.Data.Dictionary.SetDefaultReturn("InRangeDict1",False)
	'PartLocDict
	f.Data.Dictionary.CreateFromDatatable("PartLocDict","dtNonInv2","Ref","PartLoc")
	f.Data.Dictionary.SetDefaultReturn("PartLocDict","")	
	
	f.Data.DataTable.FillFromDictionary("AP","InRangeDict1","Ref","InRangeRef")
	f.Data.DataTable.FillFromDictionary("AP","PartLocDict","Ref","PartLoc")
	
	'AP PostDate
	f.Data.Dictionary.CreateFromDataTable("APPostDateDict","AP","Ref","Post_Date")
	f.Data.Dictionary.SetDefaultReturn("APPostDateDict","")
	f.Data.DataTable.FillFromDictionary("dtNonInv2","APPostDateDict","Ref","Post_Date")
	f.Data.Dictionary.Close("APPostDateDict")	
	
	f.Data.DataView.Create("AP","dvAP",22,"InRangeRef = 1","")
	f.Data.DataView.ToDataTable("AP","dvAP","AP2")
	f.Data.DataView.ToDataTableDistinct("AP","dvAP","PartLocDistinct","PartLoc*!*Ref",True)
	
	f.Data.Dictionary.Create("APTotalDict")
	f.Intrinsic.Control.If(v.DataTable.PartLocDistinct.RowCount,>,0)
		gui.frmXStatus.pbStatus.Visible(True)
		gui.frmXStatus.pbStatus.Max(v.DataTable.PartLocDistinct.RowCount)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.PartLocDistinct.RowCount--,1)
		gui.frmXStatus.pbStatus.Value(v.Local.iCnt)
		v.Local.sPartLoc.Set(v.DataTable.PartLocDistinct(v.Local.iCnt).PartLoc!FieldValString)
		f.Intrinsic.String.Build("PartLoc = '{0}' and Ref = '{1}'",v.Local.sPartLoc.PSQLFriendly,v.DataTable.PartLocDistinct(v.Local.iCnt).Ref!FieldValString,v.Local.sFilter)
		f.Data.DataTable.Compute("AP2","Sum([Amount_Cmpny])",v.Local.sFilter,v.Local.fSum)
		f.Intrinsic.String.Build("{0}{1}",v.Local.sPartLoc,v.DataTable.PartLocDistinct(v.Local.iCnt).Ref!FieldValString,v.Local.sPartLocRef)
		f.Data.Dictionary.AddItem("APTotalDict",v.Local.sPartLocRef,v.Local.fSum)	
	f.Intrinsic.Control.Next(v.Local.iCnt)
	gui.frmXStatus.pbStatus.Visible(False)
	
	f.Data.Dictionary.SetDefaultReturn("APTotalDict",0)
	f.Data.DataTable.AddExpressionColumn("dtNonInv2","PartLocRef","String","[PartLoc] + [Ref]")
	f.Data.DataTable.FillFromDictionary("dtNonInv2","APTotalDict","PartLocRef","APChange")	
	
	f.Data.Dictionary.Close("APTotalDict")
	f.Data.DataTable.Close("PartLocDistinct")
	f.Data.DataTable.Close("AP")
	f.Data.DataTable.Close("AP2")
	f.Data.Dictionary.Close("InRangeDict1")
	f.Data.Dictionary.Close("PartLocDict")
	
	f.Data.DataTable.AddExpressionColumn("dtNonInv2","Balanced","String","IIF([Extension] = [APChange],'Y','')")
	
	f.Intrinsic.Control.CallSub(loadGCNonInventory)
	v.Global.bGvNonInv.Set(True)
	Gui.frmXStatus.cmdRefreshNonInv.Enabled(True)
	Gui.frmXStatus.lblStatus.Caption("")	
	Gui.frmXStatus.lblStatus.Visible(False)	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry	
	
Program.Sub.cmdRefreshNonInv.End

Program.Sub.loadGCNonInventory.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sTitle.Declare
	
	Gui.frmXStatus.gsNonInv.AddGridviewFromDatatable("gvNonInv","dtNonInv2")	

	Gui.frmXStatus.gsNonInv.SetGridViewProperty("gvNonInv","AllowSort",True)
	Gui.frmXStatus.gsNonInv.SetGridViewProperty("gvNonInv","AllowFilter",True)
	'Gui.frmXStatus.gsNonInv.SetGridViewProperty("gvNonInv","OptionsFindAlwaysVisible",True)
	'Gui.frmXStatus.gsNonInv.SetGridViewProperty("gvNonInv","EnableAppearanceOddRow",False)
	Gui.frmXStatus.gsNonInv.SetGridViewProperty("gvNonInv","OptionsViewShowAutoFilterRow",True)
	Gui.frmXStatus.gsNonInv.SetGridViewProperty("gvNonInv","AllowColumnResizing",True)
	Gui.frmXStatus.gsNonInv.SetGridViewProperty("gvNonInv","OptionsViewColumnAutoWidth",False)	
	Gui.frmXStatus.gsNonInv.SetGridViewProperty("gvNonInv","ColumnPanelRowHeight","35")	

	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","PartLoc","Visible",False)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","NonInv","Visible",False)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Ref","Visible",False)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","InRangeRef","Visible",False)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Date_Received2","Visible",False)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","PartLocRef","Visible",False)
	
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Part","MinWidth","160")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Location","MinWidth","30")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Vendor","MinWidth","50")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Receiver_No","MinWidth","50")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Purchase_Order","MinWidth","50")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","PO_Line","MinWidth","50")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Date_Received","MinWidth","80")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Post_Date","MinWidth","80")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","EXTENSION","MinWidth","90")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","APChange","MinWidth","90")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Balanced","MinWidth","40")
	
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Part","Caption","Part")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Location","Caption","Loc")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Vendor","Caption","Vendor")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Receiver_No","Caption","Rec No")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Purchase_Order","Caption","PO Num")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","PO_Line","Caption","PO Line")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Date_Received","Caption","Receipt Date")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Post_Date","Caption","Post Date")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","EXTENSION","Caption","Ext Cost")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","APChange","Caption","AP Change")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Balanced","Caption","Balanced")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","GL_Number","Caption","GL")
	
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Part","HeaderFontBold",True)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Location","HeaderFontBold",True)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Vendor","HeaderFontBold",True)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Receiver_No","HeaderFontBold",True)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Purchase_Order","HeaderFontBold",True)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","PO_Line","HeaderFontBold",True)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Date_Received","HeaderFontBold",True)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","EXTENSION","HeaderFontBold",True)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","APChange","HeaderFontBold",True)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Post_Date","HeaderFontBold",True)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Balanced","HeaderFontBold",True)
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","GL_Number","HeaderFontBold",True)
	
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Part","HeaderVAlignment","Top")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Location","HeaderVAlignment","Top")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Vendor","HeaderVAlignment","Top")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Receiver_No","HeaderVAlignment","Top")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Purchase_Order","HeaderVAlignment","Top")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","PO_Line","HeaderVAlignment","Top")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Date_Received","HeaderVAlignment","Top")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","EXTENSION","HeaderVAlignment","Top")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","APChange","HeaderVAlignment","Top")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Post_Date","HeaderVAlignment","Top")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Balanced","HeaderVAlignment","Top")	
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","GL_Number","HeaderVAlignment","Top")	
	
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Location","HeaderHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Vendor","HeaderHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Receiver_No","HeaderHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Purchase_Order","HeaderHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","PO_Line","HeaderHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Date_Received","HeaderHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Post_Date","HeaderHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Balanced","HeaderHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","GL_Number","HeaderHAlignment","center")
	
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Location","CellHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Vendor","CellHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Receiver_No","CellHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Purchase_Order","CellHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","PO_Line","CellHAlignment","center")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Date_Received","CellHAlignment","center")	
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Post_Date","CellHAlignment","center")	
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","Balanced","CellHAlignment","center")	
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","GL_Number","CellHAlignment","center")	
	
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","EXTENSION","HeaderHAlignment","far")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","APChange","HeaderHAlignment","far")
	
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","EXTENSION","DisplayCustomNumeric","#,###,##0.00")
	Gui.frmXStatus.gsNonInv.SetColumnProperty("gvNonInv","APChange","DisplayCustomNumeric","#,###,##0.00")
	
	Gui.frmXStatus.gsNonInv.AddSummaryItem("gvNonInv","EXTENSION","Tag","sum","","","n")
	Gui.frmXStatus.gsNonInv.AddSummaryItem("gvNonInv","APChange","Tag","sum","","","n")
	
	'Balanced color
	gui.frmXStatus.gsNonInv.AddStyleFormatCondition("gvNonInv","Balanced","tagBalancedNonInv","equal","Y")
	gui.frmXStatus.gsNonInv.SetStyleFormatConditionProperty("gvNonInv","Balanced","tagBalancedNonInv","backcolor","LightBlue")
	
	Gui.frmXStatus.gsNonInv.AddSummaryItem("gvNonInv","PART","PART","Count","Total Parts: ","",n0)
	
	Gui.frmXStatus.gsNonInv.MainView("gvNonInv")

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.loadGCNonInventory.End

Program.Sub.chkCompare_Click.Start
v.Local.sMsg.Declare
f.Intrinsic.Control.If(v.Screen.frmXStatus!chkCompare.Value,=,1)
	f.Intrinsic.String.Build("If you select this, you should run{0}the Inventory > Reports > Extended Status > By Product Line with CutOff Date{0}with the same Product Lines{0}and CutOff date is the End Cutoff Date of the period (the 2nd CutOff Date).",v.Ambient.NewLine,v.Local.sMsg)
	f.Intrinsic.UI.Msgbox(v.Local.sMsg, "Attention")
f.Intrinsic.Control.EndIf
Program.Sub.chkCompare_Click.End

Program.Sub.SetContextMenu.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	
	'Grid gvMain
	gui.frmXStatus..ContextMenuCreate("ctxMain")
	gui.frmXStatus.gsStatus.ContextMenuAttach("ctxMain")
	gui.frmXStatus..ContextMenuAddItem("ctxMain","Export",0,"Export")
	gui.frmXStatus..ContextMenuAddItem("ctxMain","Refresh",0,"Refresh")
	gui.frmXStatus..ContextMenuSetItemEventHandler("ctxMain","Export","Export")
	gui.frmXStatus..ContextMenuSetItemEventHandler("ctxMain","Refresh","Refresh")
	'Grid gvNonInv
	gui.frmXStatus..ContextMenuCreate("ctxNonInv")
	gui.frmXStatus.gsNonInv.ContextMenuAttach("ctxNonInv")
	gui.frmXStatus..ContextMenuAddItem("ctxNonInv","Export",0,"Export")
	gui.frmXStatus..ContextMenuAddItem("ctxNonInv","Refresh",0,"Refresh")
	gui.frmXStatus..ContextMenuSetItemEventHandler("ctxNonInv","Export","Export")
	gui.frmXStatus..ContextMenuSetItemEventHandler("ctxNonInv","Refresh","Refresh")	
	'Grid gvPartHistory
	gui.FrmPrtHist..ContextMenuCreate("ctxPartHistory")
	gui.FrmPrtHist.GsGCPrtHist.ContextMenuAttach("ctxPartHistory")
	gui.FrmPrtHist..ContextMenuAddItem("ctxPartHistory","Export",0,"Export")
	gui.FrmPrtHist..ContextMenuAddItem("ctxPartHistory","Refresh",0,"Refresh")
	gui.FrmPrtHist..ContextMenuSetItemEventHandler("ctxPartHistory","Export","Export")
	gui.FrmPrtHist..ContextMenuSetItemEventHandler("ctxPartHistory","Refresh","Refresh")	
	'Grid gvGLHist
	gui.FrmPrtHist..ContextMenuCreate("ctxGLHist")
	gui.FrmPrtHist.GSGCGLHist.ContextMenuAttach("ctxGLHist")
	gui.FrmPrtHist..ContextMenuAddItem("ctxGLHist","Export",0,"Export")
	gui.FrmPrtHist..ContextMenuAddItem("ctxGLHist","Refresh",0,"Refresh")
	gui.FrmPrtHist..ContextMenuSetItemEventHandler("ctxGLHist","Export","Export")
	gui.FrmPrtHist..ContextMenuSetItemEventHandler("ctxGLHist","Refresh","Refresh")	
	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenu.End

Program.Sub.Export.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.bExcel.Declare
	v.Local.sExt.Declare
	v.Local.sGL.Declare
	v.Local.dStart.Declare
	v.Local.dEnd.Declare
	v.Local.sFileExport.Declare

	'Check Excel
	f.Automation.MSExcel.CheckPresence(v.Local.bExcel)
	f.Intrinsic.Control.If(v.Local.bExcel)
		v.Local.sExt.Set("xlsx")
	f.Intrinsic.Control.Else
		v.Local.sExt.Set("csv")
	f.Intrinsic.Control.EndIf
	
	'Set Form
	f.Intrinsic.String.Split(v.Screen.frmXStatus!ddlGL.Text,"~",v.Local.sGL)
	f.Intrinsic.Control.SelectCase(v.Args.MenuName.UCase)
		f.Intrinsic.Control.CaseAny("CTXMAIN","CTXNONINV")						
			v.Local.dStart.Set(v.Screen.frmXStatus!dtpStart.Value)
			v.Local.dEnd.Set(v.Screen.frmXStatus!dtpEnd.Value)		
			f.Intrinsic.Control.If(v.Args.MenuName.UCase,=,"CTXMAIN")
				f.Intrinsic.Control.If(v.Global.bGVMain.Not)
					f.Intrinsic.Control.ExitSub
				f.Intrinsic.Control.EndIf
				f.Intrinsic.String.Build("{0}\Custom\5604\Inv_{1}_{2}_{3}_{4}.{5}",v.Caller.GlobalDir,v.Local.sGL(0).Trim,v.Local.dStart.FormatYYYYMMDD,v.Local.dEnd.FormatYYYYMMDD,v.Ambient.Now.FormatYYYYMMDDHHNNSS,v.Local.sExt,v.Local.sFileExport)
				gui.frmXStatus.gsStatus.Export(v.Local.sFileExport,v.Local.sExt)
			f.Intrinsic.Control.Else
				'ctxNonInv
				f.Intrinsic.Control.If(v.Global.bGvNonInv.Not)
					f.Intrinsic.Control.ExitSub
				f.Intrinsic.Control.EndIf
				f.Intrinsic.String.Build("{0}\Custom\5604\NonInv_{1}_{2}_{3}_{4}.{5}",v.Caller.GlobalDir,v.Local.sGL(0).Trim,v.Local.dStart.FormatYYYYMMDD,v.Local.dEnd.FormatYYYYMMDD,v.Ambient.Now.FormatYYYYMMDDHHNNSS,v.Local.sExt,v.Local.sFileExport)
				gui.frmXStatus.gsNonInv.Export(v.Local.sFileExport,v.Local.sExt)			
			f.Intrinsic.Control.EndIf
			f.Intrinsic.Task.ShellExec(0,"",v.Local.sFileExport,"","",1)	
		f.Intrinsic.Control.CaseAny("CTXPARTHISTORY","CTXGLHIST")
			F.Intrinsic.Control.If(V.Args.MenuName.UCase,=,"CTXPARTHISTORY")
				F.Intrinsic.Control.If(V.Global.bGvPartHistory.Not)
					F.Intrinsic.Control.ExitSub
				F.Intrinsic.Control.EndIf
				v.Local.dStart.Set(v.Screen.FrmPrtHist!dtpFrom.Value)
				v.Local.dEnd.Set(v.Screen.FrmPrtHist!dtpTo.Value)
				f.Intrinsic.String.Build("{0}\Custom\5604\PartHist_{1}_{2}_{3}_{4}.{5}",v.Caller.GlobalDir,v.Local.sGL(0).Trim,v.Local.dStart.FormatYYYYMMDD,v.Local.dEnd.FormatYYYYMMDD,v.Ambient.Now.FormatYYYYMMDDHHNNSS,v.Local.sExt,v.Local.sFileExport)
				gui.FrmPrtHist.GsGCPrtHist.Export(v.Local.sFileExport,v.Local.sExt)
			F.Intrinsic.Control.Else
				'CTXPARTHISTORY
				F.Intrinsic.Control.If(V.Global.bgvGLHist.Not)
					F.Intrinsic.Control.ExitSub
				F.Intrinsic.Control.EndIf
				v.Local.dStart.Set(v.Screen.FrmPrtHist!dtpGLStart.Value)
				v.Local.dEnd.Set(v.Screen.FrmPrtHist!dtpGLEnd.Value)
				f.Intrinsic.String.Build("{0}\Custom\5604\GLHist_{1}_{2}_{3}_{4}.{5}",v.Caller.GlobalDir,v.Local.sGL(0).Trim,v.Local.dStart.FormatYYYYMMDD,v.Local.dEnd.FormatYYYYMMDD,v.Ambient.Now.FormatYYYYMMDDHHNNSS,v.Local.sExt,v.Local.sFileExport)
				gui.FrmPrtHist.GSGCGLHist.Export(v.Local.sFileExport,v.Local.sExt)
			F.Intrinsic.Control.EndIf			
	f.Intrinsic.Control.EndSelect	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Export.End

Program.Sub.Refresh.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	
	f.Intrinsic.Control.SelectCase(v.Args.MenuName.UCase)
		f.Intrinsic.Control.Case("CTXMAIN")
			f.Intrinsic.Control.CallSub("cmdRefreshInvRec")
		f.Intrinsic.Control.Case("CTXNONINV")
			f.Intrinsic.Control.CallSub("cmdRefreshNonInv")
		f.Intrinsic.Control.Case("CTXPARTHISTORY")
			f.Intrinsic.Control.CallSub("cmdLoadPartHist_Click")
		f.Intrinsic.Control.Case("CTXGLHIST")
			f.Intrinsic.Control.CallSub("cmdLoadGLHist_Click")
	f.Intrinsic.Control.EndSelect		

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Refresh.End

Program.Sub.FormatBulk.Start
f.Intrinsic.Control.Try
	V.Local..BulkDeclareString(sError,sColumns,sHold)
	v.Local..BulkDeclareLong(iCnt)

	f.Intrinsic.String.Split(v.Args.sInputColumns,",",v.Local.sColumns)
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sColumns.UBound,1)
		F.Intrinsic.Control.SelectCase(v.Args.sProperty)
			F.Intrinsic.Control.Case("MinWidth")
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"MinWidth",v.Args.sWidth)
			F.Intrinsic.Control.Case("MaxWidth")
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"MaxWidth",v.Args.sWidth)
			F.Intrinsic.Control.Case("Width")
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"Width",v.Args.sWidth)
			F.Intrinsic.Control.Case("Invisible")
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"Visible",False)
			F.Intrinsic.Control.Case("VisibleIndex")
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"VisibleIndex",v.Local.iCnt)
			F.Intrinsic.Control.Case("Caption")
				f.Intrinsic.String.Split(v.Local.sColumns(v.Local.iCnt),"~",v.Local.sHold)
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sHold(0),"Caption",v.Local.sHold(1))
			F.Intrinsic.Control.Case("HeaderAllign_Far")
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"HeaderHAlignment","Far")
			F.Intrinsic.Control.Case("HeaderAllign_Center")
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"HeaderHAlignment","Center")
			F.Intrinsic.Control.Case("HeaderAllign_Top")
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"HeaderVAlignment","Top")
			F.Intrinsic.Control.Case("HeaderFontBold")	
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"HeaderFontBold",True)
			F.Intrinsic.Control.Case("HeaderWordWrap")	
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"HeaderWordWrap","Wrap")
			F.Intrinsic.Control.Case("CellHAlignment_Center")	
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"CellHAlignment","Center")
			F.Intrinsic.Control.Case("CellHAlignment_Far")	
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"CellHAlignment","Far")
			F.Intrinsic.Control.Case("Decimal_1")	
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"DisplayCustomNumeric","###,###,###,##0.00")
			f.Intrinsic.Control.Case("For_CellValue_Changed")
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"AllowEdit",True)	
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"ReadOnly",False)
			f.Intrinsic.Control.Case("For_RowCell_Click")
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"AllowEdit",False)	
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"ReadOnly",True)
			f.Intrinsic.Control.Case("DisplayCustomDatetime")
				gui.[v.args.sForm].[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"DisplayCustomDatetime","d")	
			F.Intrinsic.Control.EndSelect		
	f.Intrinsic.Control.Next(v.Local.iCnt)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Subroutine called from:{6}{1}Error Occurred: {3}{1}Description: {4}{1}GAB Version: {5} column: {7}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,v.Ambient.SubroutineCalledFrom,v.Local.sColumns(v.Local.iCnt),V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.FormatBulk.End

Program.Sub.cmdShowFullPL_Click.Start
f.Intrinsic.Control.Try
	v.Local.sGLs.Declare
	v.Local.sHold.Declare
	v.Local.sRet.Declare
	
	f.Intrinsic.Control.If(v.Screen.frmXStatus!ddlGL.Text.Trim,=,"")
		f.Intrinsic.UI.Msgbox("Please select GL ~ PLs.","Attention")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	f.Intrinsic.String.Split(v.Screen.frmXStatus!ddlGL.Text,"~",v.Local.sGLs)
	f.Intrinsic.Control.If(v.Local.sGLs.UBound,>=,1)
		f.Intrinsic.String.Build("PLs tied to GL {0}",v.Local.sGLs(0).Trim,v.Local.sHold)
		f.Intrinsic.UI.Inputbox("PL",v.Local.sGLs(0).Trim,v.Local.sGLs(1).Trim,v.Local.sRet)	
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("No PLs found","Attention")
	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Subroutine called from:{6}{1}Error Occurred: {3}{1}Description: {4}{1}GAB Version: {5} column: {7}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,v.Ambient.SubroutineCalledFrom,v.Local.sColumns(v.Local.iCnt),V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.cmdShowFullPL_Click.End

Program.Sub.cmdSave_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dthasHist2.Exists)
		f.Intrinsic.Control.If(v.DataTable.dthasHist2.RowCount,>,0)
			f.Intrinsic.UI.InvokeWaitDialog("Saving 2nd CutOff data to custom table in order to compare with 4631 Data")
			f.ODBC.Connection!con.Execute("Delete from GCG_5604_4631 where Ref = 0")
			f.Data.DataTable.SaveToDB("dthasHist2","con","GCG_5604_4631","","128","PartLoc@!@PartLoc*!*Product_Line@!@Product_Line*!*New_Onhand2@!@Onhand*!*New_Inv_Cost2@!@UnitCost*!*Ext_Cost2@!@Extension")
			f.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Subroutine called from:{6}{1}Error Occurred: {3}{1}Description: {4}{1}GAB Version: {5} column: {7}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,v.Ambient.SubroutineCalledFrom,v.Local.sColumns(v.Local.iCnt),V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdSave_Click.End

Program.Sub.cmdResizeGrids_Click.Start
f.Intrinsic.UI.InvokeWaitDialog("Resizing...")
f.Intrinsic.Control.If(v.Global.bRezise.Not)
	Gui.frmXStatus.GsStatus.Size(17715,4920)
	Gui.frmXStatus.gsNonInv.Size(17715,4920)
f.Intrinsic.Control.Else
	Gui.frmXStatus.GsStatus.Size(17805,8445)
	Gui.frmXStatus.gsNonInv.Size(17715,4920)
f.Intrinsic.Control.EndIf

f.Intrinsic.Control.If(v.Global.bRezise.Not)
	v.Global.bRezise.Set(True)
f.Intrinsic.Control.Else
	v.Global.bRezise.Set(False)
f.Intrinsic.Control.EndIf
f.Intrinsic.UI.CloseWaitDialog 
Program.Sub.cmdResizeGrids_Click.End

Program.Sub.Compare4631_UnLoad.Start
gui.Compare4631..Visible(False)
Program.Sub.Compare4631_UnLoad.End

Program.Sub.cmdCompare_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sRet.Declare
	V.Local.sSQL.Declare
	v.Local.iCnt.Declare
	v.Local.sFilter.Declare
	
	f.Intrinsic.Control.If(v.DataTable.Compare.Exists)
		f.Data.DataTable.Close("Compare")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.UI.InvokeWaitDialog("Binding Compare...")
	f.Data.DataTable.CreateFromSQL("Compare","con","Select PartLoc,Product_Line,PartLoc + '-' + Product_Line as PartLocPL,Onhand as Onhand_5604,UnitCost as UnitCost_5604,Extension as Extension_5604 From GCG_5604_4631 where Ref = 0 Order by Product_Line, PartLoc",True)
	f.Data.DataTable.AddColumn("Compare","Ref","String","")
	f.Data.DataTable.SetValue("Compare",-1,"Ref","5604")

	F.Data.DataTable.CreateFromSQL("From4631", "con", "Select PartLoc + '-' + Product_Line as PartLocPL,PartLoc,Product_Line,Onhand as Onhand_4631,UnitCost as UnitCost_4631,Extension as Extension_4631 From GCG_5604_4631 where Ref = 1 Order by Product_Line, PartLoc", True)
	
	f.Intrinsic.Control.CallSub("Add_Dictionaries","SourceTable","From4631","KeyColumn","PartLocPL","ColumnList","Onhand_4631~Float~0,UnitCost_4631~Float~0,Extension_4631~Float~0","TargetTable","Compare")	
	
	f.Data.DataTable.Close("From4631")
	
	'PartLoc + '-' + Product_Line as PartLocPL,Ref,
	f.Data.DataTable.CreateFromSQL("ExtraCompare","con","Select PartLoc,Product_line,PartLoc + '-' + Product_Line as PartLocPL,Ref,Case When Ref = 0 Then OnHand Else Convert(0,SQL_Float) End as Onhand_5604,Case When Ref = 0 Then UnitCost Else Convert(0,SQL_Float) End as UnitCost_5604,Case When Ref = 0 Then Extension Else Convert(0,SQL_Float) End as Extension_5604,Case When Ref = 1 Then OnHand Else Convert(0,SQL_Float) End as Onhand_4631,Case When Ref = 1 Then UnitCost Else Convert(0,SQL_Float) End as UnitCost_4631,Case When Ref = 1 Then Extension Else Convert(0,SQL_Float) End as Extension_4631 from GCG_5604_4631 where  PartLoc + '-' + Product_Line in (SELECT PartLoc + '-' + Product_Line FROM GCG_5604_4631 group by PartLoc,Product_Line having count(*) = 1)",True)

	f.Data.DataView.Create("Compare","dvCompare")
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.ExtraCompare.RowCount--,1)
		f.Intrinsic.String.Build("PartLoc = '{0}'",v.DataTable.ExtraCompare(v.Local.iCnt).PartLoc!FieldValString,v.Local.sFilter)
		f.Data.DataView.SetFilter("Compare","dvCompare",v.Local.sFilter)
		f.Intrinsic.Control.If(v.DataView.Compare!dvCompare.RowCount,=,1)
			f.Data.DataTable.Select("Compare",v.Local.sFilter,v.Local.sRet)
			f.Data.DataTable.DeleteRow("Compare",v.Local.sRet)
			f.Data.DataTable.AcceptChanges("Compare")
			f.Intrinsic.Control.If(v.DataTable.ExtraCompare(v.Local.iCnt).Ref!FieldValString,=,"False")
				f.Data.DataTable.AddRow("Compare","PartLoc",v.DataTable.ExtraCompare(v.Local.iCnt).PartLoc!FieldValSTring,"Product_Line",v.DataTable.ExtraCompare(v.Local.iCnt).Product_Line!FieldValSTring,"PartLocPL",v.DataTable.ExtraCompare(v.Local.iCnt).PartLocPL!FieldValSTring,"Ref","5604 without 4631","Onhand_5604",v.DataTable.ExtraCompare(v.Local.iCnt).Onhand_5604!FieldValSTring,"UnitCost_5604",v.DataTable.ExtraCompare(v.Local.iCnt).UnitCost_5604!FieldValSTring,"Extension_5604",v.DataTable.ExtraCompare(v.Local.iCnt).Extension_5604!FieldValSTring,"Onhand_4631",v.Ambient.DBNull,"UnitCost_4631",v.Ambient.DBNull,"Extension_4631",v.Ambient.DBNull)
			f.Intrinsic.Control.Else
				f.Data.DataTable.AddRow("Compare","PartLoc",v.DataTable.ExtraCompare(v.Local.iCnt).PartLoc!FieldValSTring,"Product_Line",v.DataTable.ExtraCompare(v.Local.iCnt).Product_Line!FieldValSTring,"PartLocPL",v.DataTable.ExtraCompare(v.Local.iCnt).PartLocPL!FieldValSTring,"Ref","4631 without 5604","Onhand_4631",v.DataTable.ExtraCompare(v.Local.iCnt).Onhand_4631!FieldValSTring,"UnitCost_4631",v.DataTable.ExtraCompare(v.Local.iCnt).UnitCost_4631!FieldValSTring,"Extension_4631",v.DataTable.ExtraCompare(v.Local.iCnt).Extension_4631!FieldValSTring,"Onhand_5604",v.Ambient.DBNull,"UnitCost_5604",v.Ambient.DBNull,"Extension_5604",v.Ambient.DBNull)			
			f.Intrinsic.Control.EndIf					
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.iCnt)
	f.Data.DataTable.Close("ExtraCompare")
	'f.Data.DataTable.Merge("ExtraCompare","Compare",True,3)
	
	f.Data.DataTable.AddColumn("Compare","Part_Create_Date","Date","01-01-1900")
	f.Data.Dictionary.CreateFromSQL("DateCreatedDict","con","Select Part + Location as PartLoc,PART_CREATE_DATE from  v_INVENTORY_MST3")
	f.Data.Dictionary.SetDefaultReturn("DateCreatedDict","01-01-1900")
	f.Data.DataTable.FillFromDictionary("Compare","DateCreatedDict","PartLoc","Part_Create_Date")
	f.Data.Dictionary.Close("DateCreatedDict")
	
	f.Data.DataTable.AddExpressionColumn("Compare","EqualExtension","String","IIF([Extension_5604] = [Extension_4631],'Y','')")	
	gui.Compare4631.gsCompare.AddGridviewFromDatatable("gvC","Compare")
	
	Gui.Compare4631.gsCompare.SetGridViewProperty("gvC","AllowSort",True)
	Gui.Compare4631.gsCompare.SetGridViewProperty("gvC","AllowFilter",True)
	Gui.Compare4631.gsCompare.SetGridViewProperty("gvC","OptionsViewShowAutoFilterRow",True)
	Gui.Compare4631.gsCompare.SetGridViewProperty("gvC","AllowColumnResizing",True)	
	Gui.Compare4631.gsCompare.SetGridViewProperty("gvC","OptionsFindAlwaysVisible",True)
	
	Gui.Compare4631.gsCompare.AddSummaryItem("gvC","Extension_5604","","Sum","","","n")
	Gui.Compare4631.gsCompare.AddSummaryItem("gvC","Extension_4631","","Sum","","","n")
	
	Gui.Compare4631.gsCompare.SetColumnProperty("gvC","PART_CREATE_DATE","DisplayCustomDatetime","d")
	
	f.Intrinsic.UI.CloseWaitDialog
	gui.Compare4631.gsCompare.MainView("gvC")
	
	gui.Compare4631.gsCompare.Anchor(15)
	gui.Compare4631..Show
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Subroutine called from:{6}{1}Error Occurred: {3}{1}Description: {4}{1}GAB Version: {5} column: {7}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,v.Ambient.SubroutineCalledFrom,v.Local.sColumns(v.Local.iCnt),V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdCompare_Click.End

Program.Sub.TimeZones.Start
f.Intrinsic.Control.Try

	f.Data.DataTable.CreateFromString("dtTimeZone","UTC-04*!*UTC-05*!*UTC-06*!*UTC-07*!*UTC-08*!*UTC-09*!*UTC-10*!*UTC-11","Name","","*!*",True)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Subroutine called from:{6}{1}Error Occurred: {3}{1}Description: {4}{1}GAB Version: {5} column: {7}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,v.Ambient.SubroutineCalledFrom,v.Local.sColumns(v.Local.iCnt),V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.TimeZones.End

Program.Sub.Comments.Start
	'Add GL_AP column
'	v.Local.dHold.Declare
'	v.Local.iYear.Declare
'	f.Intrinsic.Date.Year(v.Local.dStart,v.Local.iYear)
'	f.Intrinsic.Math.Sub(v.Local.iYear,1,v.Local.iYear)
'	f.Intrinsic.String.Build("01/01/{0}",v.Local.iYear,v.Local.shold)
'	v.Local.dHold.Set(v.Local.shold)	
'	v.Local.shold.Set(v.Local.dHold.FormatYYYYMMDD)
		
'	f.Intrinsic.String.Build("select GL_Number,PO_Num,PO_Line,Po_Num + PO_Line as PO,Amount_Cmpny,'' as Part,'' as Location from GL_AP_Detail where Post_Date between '{0}' and '{1}'",v.Local.dStart.FormatYYYYMMDD,v.Local.dEnd.FormatYYYYMMDD,v.Local.sSQL)
'	f.Data.DataTable.CreateFromSQL("APAg","con",v.Local.sSQL,True)		

'	f.Intrinsic.Control.If(v.Local.iYear,<,2000)
'		f.Intrinsic.String.Build("Select Purchase_Order + PO_Line as PO, Part,Location from PO_History where Date_Received >= '{0}' UNION select Purchase_Order + PO_Line as PO, Part,Location from PO_History where Date_Received between '010101' and '791231'",v.Local.dHold.righ6,v.Local.sSQL)
'	f.Intrinsic.Control.Else
'		f.Intrinsic.String.Build("Select Purchase_Order + PO_Line as PO, Part,Location from PO_History where Date_Received between '{0}' and '791231'",v.Local.dHold.righ6,v.Local.sSQL)	
'	f.Intrinsic.Control.EndIf
'	f.Data.DataTable.CreateFromSQL("POHist","con",v.Local.sSQL,True)	
'	
'	f.Intrinsic.Control.CallSub("Add_Using_Dictionaries","SourceTable","POHist","KeyColumn","PO","ColumnList","Part~String~,Location~String~","TargetTable","APAg")
'	f.Data.DataTable.Close("POHist")
'	
'	f.Intrinsic.String.Build("Delete from GCG_5604_AP where UserID = '{0}'",v.Caller.User,v.Local.sSQL)
'	f.ODBC.Connection!con.Execute(v.Local.sSQL)
'	f.Data.DataView.Create("APAg","dvAPag",22,"Part <> '' and Location <> ''","")
'	f.Data.DataView.ToDataTable("APAg","dvAPag","APAg2",True)
'	f.Data.DataTable.Close("APAg")
'	f.Data.DataTable.AddColumn("APAg2","UserID","String",v.Caller.User)
'	f.Data.DataTable.SaveToDB("APAg2","con","GCG_5604_AP","",128,"UserID@!@UserID*!*Part@!@Part*!*Location@!@Location*!*Amount_Cmpny@!@Amount_Cmpny")
'	f.Data.DataTable.Close("APAg2")
'	
'	
'	f.Intrinsic.String.Build("Select Part+Location as PartLoc,Sum(Amount_Cmpny) as TotalAP from GCG_5604_AP where UserID = '{0}' Group by UserID,Part,Location",v.Caller.User,v.Local.sSQL)
'	f.Data.Dictionary.CreateFromSQL("APChangeDict","con",v.Local.sSQL)
'	f.Data.Dictionary.SetDefaultReturn("APChangeDict",0)
'	f.Data.DataTable.AddColumn("dthasHist2","APCHange","float",0)
'	f.Data.DataTable.FillFromDictionary("dthasHist2","APChangeDict","PartLoc","APChange")
'	f.Data.Dictionary.Close("APChangeDict")		

${$Inventory Extended Status Reports Consolidated into a dashboard
${$5$}$2.0.0.0$}$2
${$6$}$avaldez$}$20190903164710529$}$CBUu04veoT9NExad5Mkb3ylWEN0INN4AvLR5MleccO+nbQPqPNU1f899kKAGmDLEa3mb8CxwEi8=
Program.Sub.Comments.End
